{
  "frontend/js/utils/ApiClient.js": {
    "flatFile": "ApiClient.js",
    "mainExport": {
      "type": "class",
      "name": "ApiError"
    },
    "methods": [
      {
        "name": "toJSON",
        "static": false,
        "async": false
      },
      {
        "name": "toString",
        "static": false,
        "async": false
      },
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "get",
        "static": false,
        "async": true
      },
      {
        "name": "post",
        "static": false,
        "async": true
      },
      {
        "name": "put",
        "static": false,
        "async": true
      },
      {
        "name": "delete",
        "static": false,
        "async": true
      },
      {
        "name": "patch",
        "static": false,
        "async": true
      },
      {
        "name": "request",
        "static": false,
        "async": true
      },
      {
        "name": "getCached",
        "static": false,
        "async": false
      },
      {
        "name": "setCache",
        "static": false,
        "async": false
      },
      {
        "name": "invalidateCache",
        "static": false,
        "async": false
      },
      {
        "name": "cleanCache",
        "static": false,
        "async": false
      },
      {
        "name": "updateCacheOrder",
        "static": false,
        "async": false
      },
      {
        "name": "generateCacheKey",
        "static": false,
        "async": false
      },
      {
        "name": "retryRequest",
        "static": false,
        "async": true
      },
      {
        "name": "sleep",
        "static": false,
        "async": false
      },
      {
        "name": "addRequestInterceptor",
        "static": false,
        "async": false
      },
      {
        "name": "addResponseInterceptor",
        "static": false,
        "async": false
      },
      {
        "name": "applyRequestInterceptors",
        "static": false,
        "async": true
      },
      {
        "name": "applyResponseInterceptors",
        "static": false,
        "async": true
      },
      {
        "name": "createAbortController",
        "static": false,
        "async": false
      },
      {
        "name": "abortRequest",
        "static": false,
        "async": false
      },
      {
        "name": "abortAllRequests",
        "static": false,
        "async": false
      },
      {
        "name": "combineSignals",
        "static": false,
        "async": false
      },
      {
        "name": "buildUrl",
        "static": false,
        "async": false
      },
      {
        "name": "parseResponse",
        "static": false,
        "async": true
      },
      {
        "name": "handleError",
        "static": false,
        "async": true
      },
      {
        "name": "updateLatencyStats",
        "static": false,
        "async": false
      },
      {
        "name": "getStats",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/config/AppConfig.js": {
    "flatFile": "AppConfig.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/core/Application.js": {
    "flatFile": "Application.js",
    "mainExport": {
      "type": "class",
      "name": "Application"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": true
      },
      {
        "name": "initFoundations",
        "static": false,
        "async": true
      },
      {
        "name": "initServices",
        "static": false,
        "async": true
      },
      {
        "name": "initModels",
        "static": false,
        "async": true
      },
      {
        "name": "initViews",
        "static": false,
        "async": true
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "initControllers",
        "static": false,
        "async": true
      },
      {
        "name": "initNavigation",
        "static": false,
        "async": true
      },
      {
        "name": "connectBackend",
        "static": false,
        "async": true
      },
      {
        "name": "waitForConnection",
        "static": false,
        "async": false
      },
      {
        "name": "enableOfflineMode",
        "static": false,
        "async": false
      },
      {
        "name": "showConnectionStatus",
        "static": false,
        "async": false
      },
      {
        "name": "scheduleReconnect",
        "static": false,
        "async": false
      },
      {
        "name": "finalize",
        "static": false,
        "async": true
      },
      {
        "name": "handleNavigation",
        "static": false,
        "async": false
      },
      {
        "name": "hideAllPages",
        "static": false,
        "async": false
      },
      {
        "name": "switch",
        "static": false,
        "async": false
      },
      {
        "name": "attachErrorHandlers",
        "static": false,
        "async": false
      },
      {
        "name": "handleError",
        "static": false,
        "async": false
      },
      {
        "name": "handleInitError",
        "static": false,
        "async": false
      },
      {
        "name": "attachAppEvents",
        "static": false,
        "async": false
      },
      {
        "name": "showInterface",
        "static": false,
        "async": false
      },
      {
        "name": "getState",
        "static": false,
        "async": false
      },
      {
        "name": "isBackendConnected",
        "static": false,
        "async": false
      },
      {
        "name": "isOfflineMode",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/services/BackendService.js": {
    "flatFile": "BackendService.js",
    "mainExport": {
      "type": "class",
      "name": "BackendService"
    },
    "methods": [
      {
        "name": "connect",
        "static": false,
        "async": true
      },
      {
        "name": "handleOpen",
        "static": false,
        "async": false
      },
      {
        "name": "handleClose",
        "static": false,
        "async": false
      },
      {
        "name": "handleError",
        "static": false,
        "async": false
      },
      {
        "name": "handleConnectionError",
        "static": false,
        "async": false
      },
      {
        "name": "scheduleReconnect",
        "static": false,
        "async": false
      },
      {
        "name": "startHeartbeat",
        "static": false,
        "async": false
      },
      {
        "name": "stopHeartbeat",
        "static": false,
        "async": false
      },
      {
        "name": "handleMessage",
        "static": false,
        "async": false
      },
      {
        "name": "send",
        "static": false,
        "async": false
      },
      {
        "name": "flushMessageQueue",
        "static": false,
        "async": false
      },
      {
        "name": "disconnect",
        "static": false,
        "async": false
      },
      {
        "name": "isConnected",
        "static": false,
        "async": false
      },
      {
        "name": "getConnectionState",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/BaseCanvasView.js": {
    "flatFile": "BaseCanvasView.js",
    "mainExport": {
      "type": "class",
      "name": "BaseCanvasView"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "resize",
        "static": false,
        "async": false
      },
      {
        "name": "startRenderLoop",
        "static": false,
        "async": false
      },
      {
        "name": "stopRenderLoop",
        "static": false,
        "async": false
      },
      {
        "name": "invalidate",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "handleMouseDown",
        "static": false,
        "async": false
      },
      {
        "name": "handleMouseMove",
        "static": false,
        "async": false
      },
      {
        "name": "handleMouseUp",
        "static": false,
        "async": false
      },
      {
        "name": "handleMouseLeave",
        "static": false,
        "async": false
      },
      {
        "name": "getCanvasPoint",
        "static": false,
        "async": false
      },
      {
        "name": "clearCanvas",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "BaseController.js": {
    "flatFile": "BaseController.js",
    "mainExport": {
      "type": "class",
      "name": "BaseController"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "onInitialize",
        "static": false,
        "async": false
      },
      {
        "name": "bindEvents",
        "static": false,
        "async": false
      },
      {
        "name": "subscribe",
        "static": false,
        "async": false
      },
      {
        "name": "executeAction",
        "static": false,
        "async": true
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "handleActionError",
        "static": false,
        "async": false
      },
      {
        "name": "setupDebouncedActions",
        "static": false,
        "async": false
      },
      {
        "name": "executeDebouncedAction",
        "static": false,
        "async": false
      },
      {
        "name": "getModel",
        "static": false,
        "async": false
      },
      {
        "name": "getView",
        "static": false,
        "async": false
      },
      {
        "name": "showNotification",
        "static": false,
        "async": false
      },
      {
        "name": "logDebug",
        "static": false,
        "async": false
      },
      {
        "name": "handleError",
        "static": false,
        "async": false
      },
      {
        "name": "validateActionData",
        "static": false,
        "async": false
      },
      {
        "name": "validateEventData",
        "static": false,
        "async": false
      },
      {
        "name": "addValidator",
        "static": false,
        "async": false
      },
      {
        "name": "emitEvent",
        "static": false,
        "async": false
      },
      {
        "name": "getMetrics",
        "static": false,
        "async": false
      },
      {
        "name": "getState",
        "static": false,
        "async": false
      },
      {
        "name": "clearCache",
        "static": false,
        "async": false
      },
      {
        "name": "activate",
        "static": false,
        "async": false
      },
      {
        "name": "deactivate",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      },
      {
        "name": "for",
        "static": false,
        "async": false
      },
      {
        "name": "debounce",
        "static": false,
        "async": false
      },
      {
        "name": "throttle",
        "static": false,
        "async": false
      },
      {
        "name": "executeWithTimeout",
        "static": false,
        "async": false
      },
      {
        "name": "sleep",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/core/BaseModel.js": {
    "flatFile": "BaseModel.js",
    "mainExport": {
      "type": "class",
      "name": "BaseModel"
    },
    "methods": [
      {
        "name": "get",
        "static": false,
        "async": false
      },
      {
        "name": "set",
        "static": false,
        "async": false
      },
      {
        "name": "update",
        "static": false,
        "async": false
      },
      {
        "name": "delete",
        "static": false,
        "async": false
      },
      {
        "name": "reset",
        "static": false,
        "async": false
      },
      {
        "name": "validateField",
        "static": false,
        "async": false
      },
      {
        "name": "validateAll",
        "static": false,
        "async": false
      },
      {
        "name": "getErrors",
        "static": false,
        "async": false
      },
      {
        "name": "isValid",
        "static": false,
        "async": false
      },
      {
        "name": "persist",
        "static": false,
        "async": true
      },
      {
        "name": "load",
        "static": false,
        "async": true
      },
      {
        "name": "undo",
        "static": false,
        "async": false
      },
      {
        "name": "redo",
        "static": false,
        "async": false
      },
      {
        "name": "isDirty",
        "static": false,
        "async": false
      },
      {
        "name": "markClean",
        "static": false,
        "async": false
      },
      {
        "name": "getData",
        "static": false,
        "async": false
      },
      {
        "name": "toJSON",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/core/BaseView.js": {
    "flatFile": "BaseView.js",
    "mainExport": {
      "type": "class",
      "name": "BaseView"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "resolveContainer",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "buildTemplate",
        "static": false,
        "async": false
      },
      {
        "name": "updatePartial",
        "static": false,
        "async": false
      },
      {
        "name": "shouldRerender",
        "static": false,
        "async": false
      },
      {
        "name": "debounceRender",
        "static": false,
        "async": false
      },
      {
        "name": "show",
        "static": false,
        "async": false
      },
      {
        "name": "hide",
        "static": false,
        "async": false
      },
      {
        "name": "toggle",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "addEventListener",
        "static": false,
        "async": false
      },
      {
        "name": "removeAllEventListeners",
        "static": false,
        "async": false
      },
      {
        "name": "emit",
        "static": false,
        "async": false
      },
      {
        "name": "on",
        "static": false,
        "async": false
      },
      {
        "name": "cacheElements",
        "static": false,
        "async": false
      },
      {
        "name": "getElement",
        "static": false,
        "async": false
      },
      {
        "name": "addHook",
        "static": false,
        "async": false
      },
      {
        "name": "runHooks",
        "static": false,
        "async": false
      },
      {
        "name": "formatDate",
        "static": false,
        "async": false
      },
      {
        "name": "formatDuration",
        "static": false,
        "async": false
      },
      {
        "name": "formatFileSize",
        "static": false,
        "async": false
      },
      {
        "name": "escapeHTML",
        "static": false,
        "async": false
      },
      {
        "name": "sanitizeHTML",
        "static": false,
        "async": false
      },
      {
        "name": "deepEqual",
        "static": false,
        "async": false
      },
      {
        "name": "getNestedValue",
        "static": false,
        "async": false
      },
      {
        "name": "handleRenderError",
        "static": false,
        "async": false
      },
      {
        "name": "getErrorTemplate",
        "static": false,
        "async": false
      },
      {
        "name": "getState",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/CCEditorView.js": {
    "flatFile": "CCEditorView.js",
    "mainExport": {
      "type": "class",
      "name": "CCEditorView"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "resize",
        "static": false,
        "async": false
      },
      {
        "name": "extractPoints",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "drawGrid",
        "static": false,
        "async": false
      },
      {
        "name": "drawBaseline",
        "static": false,
        "async": false
      },
      {
        "name": "drawCurve",
        "static": false,
        "async": false
      },
      {
        "name": "drawPoints",
        "static": false,
        "async": false
      },
      {
        "name": "drawHoverHighlight",
        "static": false,
        "async": false
      },
      {
        "name": "drawSelectionRect",
        "static": false,
        "async": false
      },
      {
        "name": "showTooltip",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "onMouseDown",
        "static": false,
        "async": false
      },
      {
        "name": "onMouseMove",
        "static": false,
        "async": false
      },
      {
        "name": "onMouseUp",
        "static": false,
        "async": false
      },
      {
        "name": "onMouseLeave",
        "static": false,
        "async": false
      },
      {
        "name": "onDoubleClick",
        "static": false,
        "async": false
      },
      {
        "name": "createPoint",
        "static": false,
        "async": false
      },
      {
        "name": "deletePoint",
        "static": false,
        "async": false
      },
      {
        "name": "moveSelectedPoints",
        "static": false,
        "async": false
      },
      {
        "name": "findPointAt",
        "static": false,
        "async": false
      },
      {
        "name": "selectPointsInRect",
        "static": false,
        "async": false
      },
      {
        "name": "normalizeRect",
        "static": false,
        "async": false
      },
      {
        "name": "updateCursor",
        "static": false,
        "async": false
      },
      {
        "name": "setInterpolation",
        "static": false,
        "async": false
      },
      {
        "name": "deleteSelected",
        "static": false,
        "async": false
      },
      {
        "name": "timeToX",
        "static": false,
        "async": false
      },
      {
        "name": "xToTime",
        "static": false,
        "async": false
      },
      {
        "name": "valueToY",
        "static": false,
        "async": false
      },
      {
        "name": "yToValue",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/renderers/CCRenderer.js": {
    "flatFile": "CCRenderer.js",
    "mainExport": {
      "type": "class",
      "name": "CCRenderer"
    },
    "methods": [
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "renderCCLine",
        "static": false,
        "async": false
      },
      {
        "name": "drawLinearInterpolation",
        "static": false,
        "async": false
      },
      {
        "name": "drawStepInterpolation",
        "static": false,
        "async": false
      },
      {
        "name": "drawSmoothInterpolation",
        "static": false,
        "async": false
      },
      {
        "name": "drawCatmullRomInterpolation",
        "static": false,
        "async": false
      },
      {
        "name": "catmullRomPoint",
        "static": false,
        "async": false
      },
      {
        "name": "fillAreaUnderCurve",
        "static": false,
        "async": false
      },
      {
        "name": "renderEditablePoints",
        "static": false,
        "async": false
      },
      {
        "name": "renderValueLabel",
        "static": false,
        "async": false
      },
      {
        "name": "renderVerticalGrid",
        "static": false,
        "async": false
      },
      {
        "name": "renderBaseline",
        "static": false,
        "async": false
      },
      {
        "name": "valueToY",
        "static": false,
        "async": false
      },
      {
        "name": "yToValue",
        "static": false,
        "async": false
      },
      {
        "name": "findPointAt",
        "static": false,
        "async": false
      },
      {
        "name": "setHoveredPoint",
        "static": false,
        "async": false
      },
      {
        "name": "selectPoints",
        "static": false,
        "async": false
      },
      {
        "name": "setInterpolationType",
        "static": false,
        "async": false
      },
      {
        "name": "setHeight",
        "static": false,
        "async": false
      },
      {
        "name": "getHeight",
        "static": false,
        "async": false
      },
      {
        "name": "setVisible",
        "static": false,
        "async": false
      },
      {
        "name": "setConfig",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/utils/ClipboardManager.js": {
    "flatFile": "ClipboardManager.js",
    "mainExport": {
      "type": "class",
      "name": "ClipboardManager"
    },
    "methods": [
      {
        "name": "copy",
        "static": false,
        "async": false
      },
      {
        "name": "cut",
        "static": false,
        "async": false
      },
      {
        "name": "paste",
        "static": false,
        "async": false
      },
      {
        "name": "pasteTranspose",
        "static": false,
        "async": false
      },
      {
        "name": "pasteToChannel",
        "static": false,
        "async": false
      },
      {
        "name": "pasteAtTime",
        "static": false,
        "async": false
      },
      {
        "name": "duplicate",
        "static": false,
        "async": false
      },
      {
        "name": "calculateBounds",
        "static": false,
        "async": false
      },
      {
        "name": "deleteNotesInRange",
        "static": false,
        "async": false
      },
      {
        "name": "getClipboardInfo",
        "static": false,
        "async": false
      },
      {
        "name": "hasContent",
        "static": false,
        "async": false
      },
      {
        "name": "clear",
        "static": false,
        "async": false
      },
      {
        "name": "serialize",
        "static": false,
        "async": false
      },
      {
        "name": "deserialize",
        "static": false,
        "async": false
      },
      {
        "name": "exportAsText",
        "static": false,
        "async": false
      },
      {
        "name": "importFromText",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/utils/Constants.js": {
    "flatFile": "Constants.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/core/CoordinateSystem.js": {
    "flatFile": "CoordinateSystem.js",
    "mainExport": {
      "type": "class",
      "name": "CoordinateSystem"
    },
    "methods": [
      {
        "name": "timeToX",
        "static": false,
        "async": false
      },
      {
        "name": "xToTime",
        "static": false,
        "async": false
      },
      {
        "name": "durationToWidth",
        "static": false,
        "async": false
      },
      {
        "name": "widthToDuration",
        "static": false,
        "async": false
      },
      {
        "name": "noteToY",
        "static": false,
        "async": false
      },
      {
        "name": "yToNote",
        "static": false,
        "async": false
      },
      {
        "name": "noteHeight",
        "static": false,
        "async": false
      },
      {
        "name": "noteToRect",
        "static": false,
        "async": false
      },
      {
        "name": "rectToNote",
        "static": false,
        "async": false
      },
      {
        "name": "setZoomX",
        "static": false,
        "async": false
      },
      {
        "name": "setZoomY",
        "static": false,
        "async": false
      },
      {
        "name": "zoomInX",
        "static": false,
        "async": false
      },
      {
        "name": "zoomOutX",
        "static": false,
        "async": false
      },
      {
        "name": "zoomInY",
        "static": false,
        "async": false
      },
      {
        "name": "zoomOutY",
        "static": false,
        "async": false
      },
      {
        "name": "resetZoom",
        "static": false,
        "async": false
      },
      {
        "name": "pan",
        "static": false,
        "async": false
      },
      {
        "name": "scrollX",
        "static": false,
        "async": false
      },
      {
        "name": "scrollY",
        "static": false,
        "async": false
      },
      {
        "name": "centerOnNote",
        "static": false,
        "async": false
      },
      {
        "name": "centerOnTime",
        "static": false,
        "async": false
      },
      {
        "name": "fitToNotes",
        "static": false,
        "async": false
      },
      {
        "name": "isNoteVisible",
        "static": false,
        "async": false
      },
      {
        "name": "getVisibleNoteRange",
        "static": false,
        "async": false
      },
      {
        "name": "getVisibleTimeRange",
        "static": false,
        "async": false
      },
      {
        "name": "snapTimeToGrid",
        "static": false,
        "async": false
      },
      {
        "name": "snapXToGrid",
        "static": false,
        "async": false
      },
      {
        "name": "snapToNote",
        "static": false,
        "async": false
      },
      {
        "name": "snapYToNote",
        "static": false,
        "async": false
      },
      {
        "name": "clone",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/DataPersistenceController.js": {
    "flatFile": "DataPersistenceController.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/utils/DebugConsole.js": {
    "flatFile": "DebugConsole.js",
    "mainExport": {
      "type": "class",
      "name": "DebugConsole"
    },
    "methods": [
      {
        "name": "setupListeners",
        "static": false,
        "async": false
      },
      {
        "name": "log",
        "static": false,
        "async": false
      },
      {
        "name": "appendLog",
        "static": false,
        "async": false
      },
      {
        "name": "getCategoryEmoji",
        "static": false,
        "async": false
      },
      {
        "name": "escapeHtml",
        "static": false,
        "async": false
      },
      {
        "name": "toggle",
        "static": false,
        "async": false
      },
      {
        "name": "show",
        "static": false,
        "async": false
      },
      {
        "name": "hide",
        "static": false,
        "async": false
      },
      {
        "name": "refresh",
        "static": false,
        "async": false
      },
      {
        "name": "clear",
        "static": false,
        "async": false
      },
      {
        "name": "export",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "DebugController.js": {
    "flatFile": "DebugController.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/scripts/views/components/DeviceCard.js": {
    "flatFile": "DeviceCard.js",
    "mainExport": {
      "type": "class",
      "name": "DeviceCard"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "buildFullTemplate",
        "static": false,
        "async": false
      },
      {
        "name": "buildCompactTemplate",
        "static": false,
        "async": false
      },
      {
        "name": "buildStats",
        "static": false,
        "async": false
      },
      {
        "name": "buildChannels",
        "static": false,
        "async": false
      },
      {
        "name": "buildControls",
        "static": false,
        "async": false
      },
      {
        "name": "buildDetails",
        "static": false,
        "async": false
      },
      {
        "name": "applyStyles",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "toggleSelection",
        "static": false,
        "async": false
      },
      {
        "name": "toggleExpanded",
        "static": false,
        "async": false
      },
      {
        "name": "testDevice",
        "static": false,
        "async": true
      },
      {
        "name": "configureDevice",
        "static": false,
        "async": false
      },
      {
        "name": "connectDevice",
        "static": false,
        "async": false
      },
      {
        "name": "updateDevice",
        "static": false,
        "async": false
      },
      {
        "name": "updateStatus",
        "static": false,
        "async": false
      },
      {
        "name": "updateActivity",
        "static": false,
        "async": false
      },
      {
        "name": "animateActivity",
        "static": false,
        "async": false
      },
      {
        "name": "updateStats",
        "static": false,
        "async": false
      },
      {
        "name": "animateIn",
        "static": false,
        "async": false
      },
      {
        "name": "getStatusClass",
        "static": false,
        "async": false
      },
      {
        "name": "getStatusIcon",
        "static": false,
        "async": false
      },
      {
        "name": "getTypeIcon",
        "static": false,
        "async": false
      },
      {
        "name": "getChannelColor",
        "static": false,
        "async": false
      },
      {
        "name": "formatCapabilities",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/interaction/DragHandler.js": {
    "flatFile": "DragHandler.js",
    "mainExport": {
      "type": "class",
      "name": "DragHandler"
    },
    "methods": [
      {
        "name": "startDrag",
        "static": false,
        "async": false
      },
      {
        "name": "updateDrag",
        "static": false,
        "async": false
      },
      {
        "name": "updateGhostNotes",
        "static": false,
        "async": false
      },
      {
        "name": "finishDrag",
        "static": false,
        "async": false
      },
      {
        "name": "cancelDrag",
        "static": false,
        "async": false
      },
      {
        "name": "renderGhost",
        "static": false,
        "async": false
      },
      {
        "name": "roundRect",
        "static": false,
        "async": false
      },
      {
        "name": "isDraggingNote",
        "static": false,
        "async": false
      },
      {
        "name": "getGhostNotes",
        "static": false,
        "async": false
      },
      {
        "name": "getDraggedNote",
        "static": false,
        "async": false
      },
      {
        "name": "setConstraints",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/scripts/controllers/EditorController.js": {
    "flatFile": "EditorController.js",
    "mainExport": {
      "type": "class",
      "name": "EditorController"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "bindEvents",
        "static": false,
        "async": false
      },
      {
        "name": "initVisualizer",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "attachVisualizerEvents",
        "static": false,
        "async": false
      },
      {
        "name": "loadFile",
        "static": false,
        "async": true
      },
      {
        "name": "convertMidiToJson",
        "static": false,
        "async": true
      },
      {
        "name": "initializeRouting",
        "static": false,
        "async": true
      },
      {
        "name": "undo",
        "static": false,
        "async": false
      },
      {
        "name": "redo",
        "static": false,
        "async": false
      },
      {
        "name": "copy",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "quantizeToGrid",
        "static": false,
        "async": false
      },
      {
        "name": "transposeUp",
        "static": false,
        "async": false
      },
      {
        "name": "transposeDown",
        "static": false,
        "async": false
      },
      {
        "name": "increaseVelocity",
        "static": false,
        "async": false
      },
      {
        "name": "decreaseVelocity",
        "static": false,
        "async": false
      },
      {
        "name": "getCurrentPasteTime",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/interaction/EditorMode.js": {
    "flatFile": "EditorMode.js",
    "mainExport": {
      "type": "class",
      "name": "EditorMode"
    },
    "methods": [
      {
        "name": "activate",
        "static": false,
        "async": false
      },
      {
        "name": "deactivate",
        "static": false,
        "async": false
      },
      {
        "name": "attachEventListeners",
        "static": false,
        "async": false
      },
      {
        "name": "detachEventListeners",
        "static": false,
        "async": false
      },
      {
        "name": "onMouseDown",
        "static": false,
        "async": false
      },
      {
        "name": "onMouseMove",
        "static": false,
        "async": false
      },
      {
        "name": "onMouseUp",
        "static": false,
        "async": false
      },
      {
        "name": "onMouseLeave",
        "static": false,
        "async": false
      },
      {
        "name": "onDoubleClick",
        "static": false,
        "async": false
      },
      {
        "name": "onContextMenu",
        "static": false,
        "async": false
      },
      {
        "name": "onWheel",
        "static": false,
        "async": false
      },
      {
        "name": "onKeyDown",
        "static": false,
        "async": false
      },
      {
        "name": "startDrawNote",
        "static": false,
        "async": false
      },
      {
        "name": "updateDrawNote",
        "static": false,
        "async": false
      },
      {
        "name": "finishDrawNote",
        "static": false,
        "async": false
      },
      {
        "name": "eraseNoteAt",
        "static": false,
        "async": false
      },
      {
        "name": "createNoteAt",
        "static": false,
        "async": false
      },
      {
        "name": "duplicateSelection",
        "static": false,
        "async": false
      },
      {
        "name": "moveSelectionWithKeys",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "getCanvasCoords",
        "static": false,
        "async": false
      },
      {
        "name": "getAdjustedCoords",
        "static": false,
        "async": false
      },
      {
        "name": "updateCursor",
        "static": false,
        "async": false
      },
      {
        "name": "setTool",
        "static": false,
        "async": false
      },
      {
        "name": "getTool",
        "static": false,
        "async": false
      },
      {
        "name": "startResize",
        "static": false,
        "async": false
      },
      {
        "name": "updateResize",
        "static": false,
        "async": false
      },
      {
        "name": "finishResize",
        "static": false,
        "async": false
      },
      {
        "name": "cancelResize",
        "static": false,
        "async": false
      },
      {
        "name": "isOverHandle",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/models/EditorModel.js": {
    "flatFile": "EditorModel.js",
    "mainExport": {
      "type": "class",
      "name": "EditorModel"
    },
    "methods": [
      {
        "name": "load",
        "static": false,
        "async": false
      },
      {
        "name": "unload",
        "static": false,
        "async": false
      },
      {
        "name": "save",
        "static": false,
        "async": true
      },
      {
        "name": "saveAs",
        "static": false,
        "async": true
      },
      {
        "name": "selectNote",
        "static": false,
        "async": false
      },
      {
        "name": "deselectNote",
        "static": false,
        "async": false
      },
      {
        "name": "selectAll",
        "static": false,
        "async": false
      },
      {
        "name": "clearSelection",
        "static": false,
        "async": false
      },
      {
        "name": "getSelectedNotes",
        "static": false,
        "async": false
      },
      {
        "name": "isModified",
        "static": false,
        "async": false
      },
      {
        "name": "isLoaded",
        "static": false,
        "async": false
      },
      {
        "name": "getMidiData",
        "static": false,
        "async": false
      },
      {
        "name": "getFileInfo",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/utils/EditorRoutingManager.js": {
    "flatFile": "EditorRoutingManager.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/EditorView.js": {
    "flatFile": "EditorView.js",
    "mainExport": {
      "type": "class",
      "name": "EditorView"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "bindCustomEvents",
        "static": false,
        "async": false
      },
      {
        "name": "setModel",
        "static": false,
        "async": false
      },
      {
        "name": "setVisualizer",
        "static": false,
        "async": false
      },
      {
        "name": "buildTemplate",
        "static": false,
        "async": false
      },
      {
        "name": "renderFileInfo",
        "static": false,
        "async": false
      },
      {
        "name": "renderToolbar",
        "static": false,
        "async": false
      },
      {
        "name": "renderToolButtons",
        "static": false,
        "async": false
      },
      {
        "name": "renderSnapGrid",
        "static": false,
        "async": false
      },
      {
        "name": "renderActionButtons",
        "static": false,
        "async": false
      },
      {
        "name": "renderEditorToggles",
        "static": false,
        "async": false
      },
      {
        "name": "renderViewControls",
        "static": false,
        "async": false
      },
      {
        "name": "renderVelocityEditor",
        "static": false,
        "async": false
      },
      {
        "name": "renderModulationEditor",
        "static": false,
        "async": false
      },
      {
        "name": "renderRoutingSidebar",
        "static": false,
        "async": false
      },
      {
        "name": "renderContextMenu",
        "static": false,
        "async": false
      },
      {
        "name": "renderPropertiesModal",
        "static": false,
        "async": false
      },
      {
        "name": "setTool",
        "static": false,
        "async": false
      },
      {
        "name": "toggleSnap",
        "static": false,
        "async": false
      },
      {
        "name": "setSnapGrid",
        "static": false,
        "async": false
      },
      {
        "name": "toggleVelocityEditor",
        "static": false,
        "async": false
      },
      {
        "name": "setVelocityMode",
        "static": false,
        "async": false
      },
      {
        "name": "drawVelocityBars",
        "static": false,
        "async": false
      },
      {
        "name": "drawVelocityGrid",
        "static": false,
        "async": false
      },
      {
        "name": "setupVelocityCanvas",
        "static": false,
        "async": false
      },
      {
        "name": "onVelocityCanvasMouseDown",
        "static": false,
        "async": false
      },
      {
        "name": "onVelocityCanvasMouseMove",
        "static": false,
        "async": false
      },
      {
        "name": "onVelocityCanvasMouseUp",
        "static": false,
        "async": false
      },
      {
        "name": "findNoteAtVelocityX",
        "static": false,
        "async": false
      },
      {
        "name": "randomizeVelocity",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/core/EventBus.js": {
    "flatFile": "EventBus.js",
    "mainExport": {
      "type": "class",
      "name": "EventBus"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "startProcessing",
        "static": false,
        "async": false
      },
      {
        "name": "stopProcessing",
        "static": false,
        "async": false
      },
      {
        "name": "on",
        "static": false,
        "async": false
      },
      {
        "name": "once",
        "static": false,
        "async": false
      },
      {
        "name": "off",
        "static": false,
        "async": false
      },
      {
        "name": "offAll",
        "static": false,
        "async": false
      },
      {
        "name": "emit",
        "static": false,
        "async": false
      },
      {
        "name": "emitHigh",
        "static": false,
        "async": false
      },
      {
        "name": "emitNormal",
        "static": false,
        "async": false
      },
      {
        "name": "emitLow",
        "static": false,
        "async": false
      },
      {
        "name": "emitThrottled",
        "static": false,
        "async": false
      },
      {
        "name": "emitDebounced",
        "static": false,
        "async": false
      },
      {
        "name": "enqueueEvent",
        "static": false,
        "async": false
      },
      {
        "name": "processQueues",
        "static": false,
        "async": false
      },
      {
        "name": "processQueue",
        "static": false,
        "async": false
      },
      {
        "name": "processEventNow",
        "static": false,
        "async": false
      },
      {
        "name": "updateLatencyMetrics",
        "static": false,
        "async": false
      },
      {
        "name": "getMetrics",
        "static": false,
        "async": false
      },
      {
        "name": "resetMetrics",
        "static": false,
        "async": false
      },
      {
        "name": "for",
        "static": false,
        "async": false
      },
      {
        "name": "findInsertIndex",
        "static": false,
        "async": false
      },
      {
        "name": "generateListenerId",
        "static": false,
        "async": false
      },
      {
        "name": "generateEventId",
        "static": false,
        "async": false
      },
      {
        "name": "listEvents",
        "static": false,
        "async": false
      },
      {
        "name": "listenerCount",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      },
      {
        "name": "updateUI",
        "static": false,
        "async": false
      },
      {
        "name": "performSearch",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/FileController.js": {
    "flatFile": "FileController.js",
    "mainExport": {
      "type": "class",
      "name": "FileController"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "setupEventListeners",
        "static": false,
        "async": false
      },
      {
        "name": "refreshFileList",
        "static": false,
        "async": true
      },
      {
        "name": "selectFile",
        "static": false,
        "async": false
      },
      {
        "name": "handleFileSelect",
        "static": false,
        "async": false
      },
      {
        "name": "loadFile",
        "static": false,
        "async": true
      },
      {
        "name": "handleFileLoad",
        "static": false,
        "async": true
      },
      {
        "name": "uploadFile",
        "static": false,
        "async": true
      },
      {
        "name": "handleFileUpload",
        "static": false,
        "async": true
      },
      {
        "name": "deleteFile",
        "static": false,
        "async": true
      },
      {
        "name": "handleFileDelete",
        "static": false,
        "async": true
      },
      {
        "name": "getFileById",
        "static": false,
        "async": false
      },
      {
        "name": "fileToBase64",
        "static": false,
        "async": false
      },
      {
        "name": "showLoading",
        "static": false,
        "async": false
      },
      {
        "name": "updateView",
        "static": false,
        "async": false
      },
      {
        "name": "handleBackendEvent",
        "static": false,
        "async": false
      },
      {
        "name": "onBackendConnected",
        "static": false,
        "async": false
      },
      {
        "name": "onBackendDisconnected",
        "static": false,
        "async": false
      },
      {
        "name": "getState",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/models/FileModel.js": {
    "flatFile": "FileModel.js",
    "mainExport": {
      "type": "class",
      "name": "FileModel"
    },
    "methods": [
      {
        "name": "refreshFileList",
        "static": false,
        "async": true
      },
      {
        "name": "loadFile",
        "static": false,
        "async": true
      },
      {
        "name": "deleteFile",
        "static": false,
        "async": true
      },
      {
        "name": "renameFile",
        "static": false,
        "async": true
      },
      {
        "name": "addToRecent",
        "static": false,
        "async": false
      },
      {
        "name": "removeFromRecent",
        "static": false,
        "async": false
      },
      {
        "name": "getRecentFiles",
        "static": false,
        "async": false
      },
      {
        "name": "clearRecent",
        "static": false,
        "async": false
      },
      {
        "name": "getFilesInCurrentPath",
        "static": false,
        "async": false
      },
      {
        "name": "getFileById",
        "static": false,
        "async": false
      },
      {
        "name": "selectFile",
        "static": false,
        "async": false
      },
      {
        "name": "deselectFile",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/services/FileService.js": {
    "flatFile": "FileService.js",
    "mainExport": {
      "type": "class",
      "name": "FileService"
    },
    "methods": [
      {
        "name": "scanFiles",
        "static": false,
        "async": true
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "for",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "moveFile",
        "static": false,
        "async": true
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "getAllFiles",
        "static": false,
        "async": false
      },
      {
        "name": "getFile",
        "static": false,
        "async": false
      },
      {
        "name": "searchFiles",
        "static": false,
        "async": false
      },
      {
        "name": "getStats",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/FileView.js": {
    "flatFile": "FileView.js",
    "mainExport": {
      "type": "class",
      "name": "FileView"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "buildTemplate",
        "static": false,
        "async": false
      },
      {
        "name": "renderFileItem",
        "static": false,
        "async": false
      },
      {
        "name": "renderBulkActions",
        "static": false,
        "async": false
      },
      {
        "name": "renderContextMenu",
        "static": false,
        "async": false
      },
      {
        "name": "renderEmptyState",
        "static": false,
        "async": false
      },
      {
        "name": "onFileClick",
        "static": false,
        "async": false
      },
      {
        "name": "toggleFileSelection",
        "static": false,
        "async": false
      },
      {
        "name": "selectSingleFile",
        "static": false,
        "async": false
      },
      {
        "name": "selectRange",
        "static": false,
        "async": false
      },
      {
        "name": "selectAll",
        "static": false,
        "async": false
      },
      {
        "name": "clearSelection",
        "static": false,
        "async": false
      },
      {
        "name": "onContextMenu",
        "static": false,
        "async": false
      },
      {
        "name": "showContextMenu",
        "static": false,
        "async": false
      },
      {
        "name": "hideContextMenu",
        "static": false,
        "async": false
      },
      {
        "name": "contextPlay",
        "static": false,
        "async": false
      },
      {
        "name": "contextAddToPlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "contextAddToQueue",
        "static": false,
        "async": false
      },
      {
        "name": "contextInfo",
        "static": false,
        "async": false
      },
      {
        "name": "contextDelete",
        "static": false,
        "async": false
      },
      {
        "name": "onFileDragStart",
        "static": false,
        "async": false
      },
      {
        "name": "onFileDragEnd",
        "static": false,
        "async": false
      },
      {
        "name": "onFileDoubleClick",
        "static": false,
        "async": false
      },
      {
        "name": "playFile",
        "static": false,
        "async": false
      },
      {
        "name": "addSelectedToPlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "addSelectedToQueue",
        "static": false,
        "async": false
      },
      {
        "name": "deleteSelected",
        "static": false,
        "async": false
      },
      {
        "name": "showFileInfo",
        "static": false,
        "async": false
      },
      {
        "name": "onSearch",
        "static": false,
        "async": false
      },
      {
        "name": "updateFileItemState",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/utils/Formatter.js": {
    "flatFile": "Formatter.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/GlobalPlaybackController.js": {
    "flatFile": "GlobalPlaybackController.js",
    "mainExport": {
      "type": "class",
      "name": "GlobalPlaybackController"
    },
    "methods": [
      {
        "name": "getInstance",
        "static": true,
        "async": false
      },
      {
        "name": "connectPlaybackModelEvents",
        "static": false,
        "async": false
      },
      {
        "name": "setupBackendSync",
        "static": false,
        "async": false
      },
      {
        "name": "syncWithBackend",
        "static": false,
        "async": true
      },
      {
        "name": "loadFile",
        "static": false,
        "async": true
      },
      {
        "name": "loadMidiJson",
        "static": false,
        "async": true
      },
      {
        "name": "play",
        "static": false,
        "async": true
      },
      {
        "name": "pause",
        "static": false,
        "async": true
      },
      {
        "name": "stop",
        "static": false,
        "async": true
      },
      {
        "name": "seek",
        "static": false,
        "async": true
      },
      {
        "name": "seekPercent",
        "static": false,
        "async": true
      },
      {
        "name": "setTempo",
        "static": false,
        "async": true
      },
      {
        "name": "adjustTempo",
        "static": false,
        "async": true
      },
      {
        "name": "resetTempo",
        "static": false,
        "async": true
      },
      {
        "name": "setLoop",
        "static": false,
        "async": false
      },
      {
        "name": "toggleLoop",
        "static": false,
        "async": false
      },
      {
        "name": "setRepeatMode",
        "static": false,
        "async": false
      },
      {
        "name": "setMetronome",
        "static": false,
        "async": false
      },
      {
        "name": "startMetronome",
        "static": false,
        "async": false
      },
      {
        "name": "stopMetronome",
        "static": false,
        "async": false
      },
      {
        "name": "next",
        "static": false,
        "async": true
      },
      {
        "name": "previous",
        "static": false,
        "async": true
      },
      {
        "name": "handleEndReached",
        "static": false,
        "async": true
      },
      {
        "name": "setPlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "addToPlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "removeFromPlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "clearPlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "setRouting",
        "static": false,
        "async": false
      },
      {
        "name": "clearRouting",
        "static": false,
        "async": false
      },
      {
        "name": "getRouting",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/renderers/GridRenderer.js": {
    "flatFile": "GridRenderer.js",
    "mainExport": {
      "type": "class",
      "name": "GridRenderer"
    },
    "methods": [
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "renderNoteLines",
        "static": false,
        "async": false
      },
      {
        "name": "renderTimeGrid",
        "static": false,
        "async": false
      },
      {
        "name": "renderSubdivisions",
        "static": false,
        "async": false
      },
      {
        "name": "renderMeasureNumbers",
        "static": false,
        "async": false
      },
      {
        "name": "calculateGridSpacing",
        "static": false,
        "async": false
      },
      {
        "name": "isCacheValid",
        "static": false,
        "async": false
      },
      {
        "name": "invalidateCache",
        "static": false,
        "async": false
      },
      {
        "name": "updateCache",
        "static": false,
        "async": false
      },
      {
        "name": "setTimeGridVisible",
        "static": false,
        "async": false
      },
      {
        "name": "setNoteLinesVisible",
        "static": false,
        "async": false
      },
      {
        "name": "setSubdivisionsVisible",
        "static": false,
        "async": false
      },
      {
        "name": "setMeasureNumbersVisible",
        "static": false,
        "async": false
      },
      {
        "name": "setVisible",
        "static": false,
        "async": false
      },
      {
        "name": "setConfig",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/utils/HistoryManager.js": {
    "flatFile": "HistoryManager.js",
    "mainExport": {
      "type": "class",
      "name": "HistoryManager"
    },
    "methods": [
      {
        "name": "record",
        "static": false,
        "async": false
      },
      {
        "name": "validateAction",
        "static": false,
        "async": false
      },
      {
        "name": "shouldGroupAction",
        "static": false,
        "async": false
      },
      {
        "name": "addToGroup",
        "static": false,
        "async": false
      },
      {
        "name": "pushAction",
        "static": false,
        "async": false
      },
      {
        "name": "undo",
        "static": false,
        "async": false
      },
      {
        "name": "redo",
        "static": false,
        "async": false
      },
      {
        "name": "canUndo",
        "static": false,
        "async": false
      },
      {
        "name": "canRedo",
        "static": false,
        "async": false
      },
      {
        "name": "createAddNotesAction",
        "static": false,
        "async": false
      },
      {
        "name": "createDeleteNotesAction",
        "static": false,
        "async": false
      },
      {
        "name": "createMoveNotesAction",
        "static": false,
        "async": false
      },
      {
        "name": "createResizeNotesAction",
        "static": false,
        "async": false
      },
      {
        "name": "createVelocityAction",
        "static": false,
        "async": false
      },
      {
        "name": "createChannelChangeAction",
        "static": false,
        "async": false
      },
      {
        "name": "clear",
        "static": false,
        "async": false
      },
      {
        "name": "getState",
        "static": false,
        "async": false
      },
      {
        "name": "serialize",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/HomeController.js": {
    "flatFile": "HomeController.js",
    "mainExport": {
      "type": "class",
      "name": "HomeController"
    },
    "methods": [
      {
        "name": "onInitialize",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "bindEvents",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      },
      {
        "name": "loadInitialData",
        "static": false,
        "async": true
      },
      {
        "name": "handleFileSelected",
        "static": false,
        "async": true
      },
      {
        "name": "handleFileLoaded",
        "static": false,
        "async": false
      },
      {
        "name": "loadFile",
        "static": false,
        "async": true
      },
      {
        "name": "refreshFiles",
        "static": false,
        "async": true
      },
      {
        "name": "uploadFile",
        "static": false,
        "async": false
      },
      {
        "name": "selectFirstFile",
        "static": false,
        "async": true
      },
      {
        "name": "play",
        "static": false,
        "async": true
      },
      {
        "name": "pause",
        "static": false,
        "async": true
      },
      {
        "name": "stop",
        "static": false,
        "async": true
      },
      {
        "name": "next",
        "static": false,
        "async": true
      },
      {
        "name": "previous",
        "static": false,
        "async": true
      },
      {
        "name": "seek",
        "static": false,
        "async": true
      },
      {
        "name": "setTempo",
        "static": false,
        "async": true
      },
      {
        "name": "onPlaybackEnded",
        "static": false,
        "async": true
      },
      {
        "name": "updatePlaybackState",
        "static": false,
        "async": false
      },
      {
        "name": "updatePlaybackPosition",
        "static": false,
        "async": false
      },
      {
        "name": "assignInstrument",
        "static": false,
        "async": true
      },
      {
        "name": "autoRoute",
        "static": false,
        "async": true
      },
      {
        "name": "clearRouting",
        "static": false,
        "async": false
      },
      {
        "name": "saveRoutingPreset",
        "static": false,
        "async": true
      },
      {
        "name": "loadRoutingPreset",
        "static": false,
        "async": true
      },
      {
        "name": "loadRoutingPresets",
        "static": false,
        "async": true
      },
      {
        "name": "updateRoutingDisplay",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/HomeView.js": {
    "flatFile": "HomeView.js",
    "mainExport": {
      "type": "class",
      "name": "HomeView"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "initVisualizer",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "updateFileList",
        "static": false,
        "async": false
      },
      {
        "name": "updateCurrentFile",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "updateRoutingGrid",
        "static": false,
        "async": false
      },
      {
        "name": "getCompatibilityBadge",
        "static": false,
        "async": false
      },
      {
        "name": "updateRoutingStats",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "updateChannelToggles",
        "static": false,
        "async": false
      },
      {
        "name": "updatePlaybackState",
        "static": false,
        "async": false
      },
      {
        "name": "updateProgress",
        "static": false,
        "async": false
      },
      {
        "name": "updateNotePreview",
        "static": false,
        "async": false
      },
      {
        "name": "updateCCMonitor",
        "static": false,
        "async": false
      },
      {
        "name": "updateChannelActivity",
        "static": false,
        "async": false
      },
      {
        "name": "formatTime",
        "static": false,
        "async": false
      },
      {
        "name": "getNoteName",
        "static": false,
        "async": false
      },
      {
        "name": "getChannelColor",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/InstrumentController.js": {
    "flatFile": "InstrumentController.js",
    "mainExport": {
      "type": "class",
      "name": "InstrumentController"
    },
    "methods": [
      {
        "name": "setupEventListeners",
        "static": false,
        "async": false
      },
      {
        "name": "refreshDeviceList",
        "static": false,
        "async": true
      },
      {
        "name": "selectDevice",
        "static": false,
        "async": true
      },
      {
        "name": "connectDevice",
        "static": false,
        "async": true
      },
      {
        "name": "disconnectDevice",
        "static": false,
        "async": true
      },
      {
        "name": "scanDevices",
        "static": false,
        "async": true
      },
      {
        "name": "getDeviceProfile",
        "static": false,
        "async": true
      },
      {
        "name": "handleDeviceConnected",
        "static": false,
        "async": false
      },
      {
        "name": "handleDeviceDisconnected",
        "static": false,
        "async": false
      },
      {
        "name": "handleDeviceDiscovered",
        "static": false,
        "async": false
      },
      {
        "name": "handleSysExIdentity",
        "static": false,
        "async": false
      },
      {
        "name": "handleSysExNoteMap",
        "static": false,
        "async": false
      },
      {
        "name": "handleSysExCC",
        "static": false,
        "async": false
      },
      {
        "name": "handleSysExAir",
        "static": false,
        "async": false
      },
      {
        "name": "handleSysExLight",
        "static": false,
        "async": false
      },
      {
        "name": "handleSysExSensors",
        "static": false,
        "async": false
      },
      {
        "name": "handleSysExSync",
        "static": false,
        "async": false
      },
      {
        "name": "showError",
        "static": false,
        "async": false
      },
      {
        "name": "showSuccess",
        "static": false,
        "async": false
      },
      {
        "name": "getDevices",
        "static": false,
        "async": false
      },
      {
        "name": "getDevice",
        "static": false,
        "async": false
      },
      {
        "name": "getSelectedDevice",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/models/InstrumentModel.js": {
    "flatFile": "InstrumentModel.js",
    "mainExport": {
      "type": "class",
      "name": "InstrumentModel"
    },
    "methods": [
      {
        "name": "scan",
        "static": false,
        "async": true
      },
      {
        "name": "loadInstrument",
        "static": false,
        "async": true
      },
      {
        "name": "connect",
        "static": false,
        "async": true
      },
      {
        "name": "disconnect",
        "static": false,
        "async": true
      },
      {
        "name": "getInstrument",
        "static": false,
        "async": false
      },
      {
        "name": "getAllInstruments",
        "static": false,
        "async": false
      },
      {
        "name": "getConnectedInstruments",
        "static": false,
        "async": false
      },
      {
        "name": "getInstrumentsByType",
        "static": false,
        "async": false
      },
      {
        "name": "isConnected",
        "static": false,
        "async": false
      },
      {
        "name": "getInstrumentCount",
        "static": false,
        "async": false
      },
      {
        "name": "getConnectedCount",
        "static": false,
        "async": false
      },
      {
        "name": "clearCache",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/InstrumentView.js": {
    "flatFile": "InstrumentView.js",
    "mainExport": {
      "type": "class",
      "name": "InstrumentView"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "renderStats",
        "static": false,
        "async": false
      },
      {
        "name": "renderInstrumentCard",
        "static": false,
        "async": false
      },
      {
        "name": "renderCardHeader",
        "static": false,
        "async": false
      },
      {
        "name": "renderCardBody",
        "static": false,
        "async": false
      },
      {
        "name": "renderCapabilities",
        "static": false,
        "async": false
      },
      {
        "name": "renderMetrics",
        "static": false,
        "async": false
      },
      {
        "name": "renderCardFooter",
        "static": false,
        "async": false
      },
      {
        "name": "renderEmptyState",
        "static": false,
        "async": false
      },
      {
        "name": "attachEventListeners",
        "static": false,
        "async": false
      },
      {
        "name": "toggleExpand",
        "static": false,
        "async": false
      },
      {
        "name": "selectInstrument",
        "static": false,
        "async": false
      },
      {
        "name": "deselectInstrument",
        "static": false,
        "async": false
      },
      {
        "name": "updateInstrumentList",
        "static": false,
        "async": false
      },
      {
        "name": "updateInstrumentStatus",
        "static": false,
        "async": false
      },
      {
        "name": "showScanProgress",
        "static": false,
        "async": false
      },
      {
        "name": "hideScanProgress",
        "static": false,
        "async": false
      },
      {
        "name": "escapeHtml",
        "static": false,
        "async": false
      },
      {
        "name": "clear",
        "static": false,
        "async": false
      },
      {
        "name": "showError",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/KeyboardController.js": {
    "flatFile": "KeyboardController.js",
    "mainExport": {
      "type": "class",
      "name": "KeyboardController"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": true
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "attachKeyboardEvents",
        "static": false,
        "async": false
      },
      {
        "name": "createKeyboardMap",
        "static": false,
        "async": false
      },
      {
        "name": "loadAvailableDevices",
        "static": false,
        "async": true
      },
      {
        "name": "selectInstrument",
        "static": false,
        "async": true
      },
      {
        "name": "playNote",
        "static": false,
        "async": true
      },
      {
        "name": "stopNote",
        "static": false,
        "async": true
      },
      {
        "name": "isNotePlayable",
        "static": false,
        "async": false
      },
      {
        "name": "getPlayableNotes",
        "static": false,
        "async": false
      },
      {
        "name": "getNoteInfo",
        "static": false,
        "async": false
      },
      {
        "name": "handleKeyDown",
        "static": false,
        "async": false
      },
      {
        "name": "handleKeyUp",
        "static": false,
        "async": false
      },
      {
        "name": "panic",
        "static": false,
        "async": true
      },
      {
        "name": "getState",
        "static": false,
        "async": false
      },
      {
        "name": "getStats",
        "static": false,
        "async": false
      },
      {
        "name": "getAvailableDevices",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/utils/KeyboardShortcuts.js": {
    "flatFile": "KeyboardShortcuts.js",
    "mainExport": {
      "type": "class",
      "name": "KeyboardShortcuts"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "registerDefaultShortcuts",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "handleKeyDown",
        "static": false,
        "async": false
      },
      {
        "name": "handleKeyUp",
        "static": false,
        "async": false
      },
      {
        "name": "updateModifiers",
        "static": false,
        "async": false
      },
      {
        "name": "resetModifiers",
        "static": false,
        "async": false
      },
      {
        "name": "executeShortcut",
        "static": false,
        "async": false
      },
      {
        "name": "register",
        "static": false,
        "async": false
      },
      {
        "name": "unregister",
        "static": false,
        "async": false
      },
      {
        "name": "toggleShortcut",
        "static": false,
        "async": false
      },
      {
        "name": "getShortcuts",
        "static": false,
        "async": false
      },
      {
        "name": "getShortcutsByCategory",
        "static": false,
        "async": false
      },
      {
        "name": "enable",
        "static": false,
        "async": false
      },
      {
        "name": "disable",
        "static": false,
        "async": false
      },
      {
        "name": "toggle",
        "static": false,
        "async": false
      },
      {
        "name": "getKeyCombo",
        "static": false,
        "async": false
      },
      {
        "name": "getKeyName",
        "static": false,
        "async": false
      },
      {
        "name": "normalizeKey",
        "static": false,
        "async": false
      },
      {
        "name": "isInInput",
        "static": false,
        "async": false
      },
      {
        "name": "showShortcutsList",
        "static": false,
        "async": false
      },
      {
        "name": "formatCategoryName",
        "static": false,
        "async": false
      },
      {
        "name": "formatKeyForDisplay",
        "static": false,
        "async": false
      },
      {
        "name": "getStats",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/KeyboardView.js": {
    "flatFile": "KeyboardView.js",
    "mainExport": {
      "type": "class",
      "name": "KeyboardView"
    },
    "methods": [
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "renderWarningBanner",
        "static": false,
        "async": false
      },
      {
        "name": "renderInstrumentSelector",
        "static": false,
        "async": false
      },
      {
        "name": "renderNoteRangeDisplay",
        "static": false,
        "async": false
      },
      {
        "name": "renderVelocityControl",
        "static": false,
        "async": false
      },
      {
        "name": "renderActions",
        "static": false,
        "async": false
      },
      {
        "name": "renderLegend",
        "static": false,
        "async": false
      },
      {
        "name": "renderKeyboardMapping",
        "static": false,
        "async": false
      },
      {
        "name": "renderStats",
        "static": false,
        "async": false
      },
      {
        "name": "initCanvas",
        "static": false,
        "async": false
      },
      {
        "name": "resizeCanvas",
        "static": false,
        "async": false
      },
      {
        "name": "attachCanvasListeners",
        "static": false,
        "async": false
      },
      {
        "name": "attachEventListeners",
        "static": false,
        "async": false
      },
      {
        "name": "drawKeyboard",
        "static": false,
        "async": false
      },
      {
        "name": "drawKey",
        "static": false,
        "async": false
      },
      {
        "name": "isBlackKey",
        "static": false,
        "async": false
      },
      {
        "name": "getNoteX",
        "static": false,
        "async": false
      },
      {
        "name": "countWhiteKeysBefore",
        "static": false,
        "async": false
      },
      {
        "name": "getNoteAtPosition",
        "static": false,
        "async": false
      },
      {
        "name": "getNoteLabel",
        "static": false,
        "async": false
      },
      {
        "name": "isNotePlayable",
        "static": false,
        "async": false
      },
      {
        "name": "setInstrument",
        "static": false,
        "async": false
      },
      {
        "name": "setDevices",
        "static": false,
        "async": false
      },
      {
        "name": "setActiveNote",
        "static": false,
        "async": false
      },
      {
        "name": "updateStats",
        "static": false,
        "async": false
      },
      {
        "name": "updateStatValue",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/utils/Logger.js": {
    "flatFile": "Logger.js",
    "mainExport": {
      "type": "class",
      "name": "Logger"
    },
    "methods": [
      {
        "name": "debug",
        "static": false,
        "async": false
      },
      {
        "name": "info",
        "static": false,
        "async": false
      },
      {
        "name": "warn",
        "static": false,
        "async": false
      },
      {
        "name": "error",
        "static": false,
        "async": false
      },
      {
        "name": "setLevel",
        "static": false,
        "async": false
      },
      {
        "name": "getHistory",
        "static": false,
        "async": false
      },
      {
        "name": "clearHistory",
        "static": false,
        "async": false
      },
      {
        "name": "getStats",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/LoopController.js": {
    "flatFile": "LoopController.js",
    "mainExport": {
      "type": "class",
      "name": "LoopController"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "attachModelEvents",
        "static": false,
        "async": false
      },
      {
        "name": "attachKeyboardEvents",
        "static": false,
        "async": false
      },
      {
        "name": "setupKeyboardShortcuts",
        "static": false,
        "async": false
      },
      {
        "name": "startUpdateLoop",
        "static": false,
        "async": false
      },
      {
        "name": "toggleRecord",
        "static": false,
        "async": false
      },
      {
        "name": "startRecording",
        "static": false,
        "async": false
      },
      {
        "name": "stopRecording",
        "static": false,
        "async": false
      },
      {
        "name": "togglePlay",
        "static": false,
        "async": false
      },
      {
        "name": "play",
        "static": false,
        "async": false
      },
      {
        "name": "pause",
        "static": false,
        "async": false
      },
      {
        "name": "stop",
        "static": false,
        "async": false
      },
      {
        "name": "promptClearLoop",
        "static": false,
        "async": false
      },
      {
        "name": "clearLoop",
        "static": false,
        "async": false
      },
      {
        "name": "startCountIn",
        "static": false,
        "async": false
      },
      {
        "name": "cancelCountIn",
        "static": false,
        "async": false
      },
      {
        "name": "toggleMetronome",
        "static": false,
        "async": false
      },
      {
        "name": "setMetronome",
        "static": false,
        "async": false
      },
      {
        "name": "setMetronomeVolume",
        "static": false,
        "async": false
      },
      {
        "name": "startMetronome",
        "static": false,
        "async": false
      },
      {
        "name": "stopMetronome",
        "static": false,
        "async": false
      },
      {
        "name": "createNewLoop",
        "static": false,
        "async": false
      },
      {
        "name": "updateLoopSettings",
        "static": false,
        "async": false
      },
      {
        "name": "setRecordMode",
        "static": false,
        "async": false
      },
      {
        "name": "setQuantize",
        "static": false,
        "async": false
      },
      {
        "name": "toggleMute",
        "static": false,
        "async": false
      },
      {
        "name": "toggleSolo",
        "static": false,
        "async": false
      },
      {
        "name": "setLayerVolume",
        "static": false,
        "async": false
      },
      {
        "name": "clearLayer",
        "static": false,
        "async": false
      },
      {
        "name": "confirmClearLayer",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/models/LoopModel.js": {
    "flatFile": "LoopModel.js",
    "mainExport": {
      "type": "class",
      "name": "LoopModel"
    },
    "methods": [
      {
        "name": "createLoop",
        "static": false,
        "async": false
      },
      {
        "name": "startRecording",
        "static": false,
        "async": false
      },
      {
        "name": "recordEvent",
        "static": false,
        "async": false
      },
      {
        "name": "stopRecording",
        "static": false,
        "async": false
      },
      {
        "name": "quantizeBuffer",
        "static": false,
        "async": false
      },
      {
        "name": "mergeBufferToLayer",
        "static": false,
        "async": false
      },
      {
        "name": "playLoop",
        "static": false,
        "async": false
      },
      {
        "name": "pauseLoop",
        "static": false,
        "async": false
      },
      {
        "name": "stopLoop",
        "static": false,
        "async": false
      },
      {
        "name": "updatePlayback",
        "static": false,
        "async": false
      },
      {
        "name": "hasSoloLayers",
        "static": false,
        "async": false
      },
      {
        "name": "muteLayer",
        "static": false,
        "async": false
      },
      {
        "name": "soloLayer",
        "static": false,
        "async": false
      },
      {
        "name": "setLayerVolume",
        "static": false,
        "async": false
      },
      {
        "name": "clearLayer",
        "static": false,
        "async": false
      },
      {
        "name": "clearLoop",
        "static": false,
        "async": false
      },
      {
        "name": "saveLoop",
        "static": false,
        "async": true
      },
      {
        "name": "loadLoop",
        "static": false,
        "async": true
      },
      {
        "name": "listLoops",
        "static": false,
        "async": true
      },
      {
        "name": "deleteLoop",
        "static": false,
        "async": true
      },
      {
        "name": "exportToMidiJson",
        "static": false,
        "async": false
      },
      {
        "name": "setQuantize",
        "static": false,
        "async": false
      },
      {
        "name": "getCurrentLoop",
        "static": false,
        "async": false
      },
      {
        "name": "getState",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/LoopRecorderView.js": {
    "flatFile": "LoopRecorderView.js",
    "mainExport": {
      "type": "class",
      "name": "LoopRecorderView"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "initTimelineCanvas",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "attachTimelineEvents",
        "static": false,
        "async": false
      },
      {
        "name": "pixelToTime",
        "static": false,
        "async": false
      },
      {
        "name": "timeToPixel",
        "static": false,
        "async": false
      },
      {
        "name": "drawTimeline",
        "static": false,
        "async": false
      },
      {
        "name": "drawGrid",
        "static": false,
        "async": false
      },
      {
        "name": "drawBars",
        "static": false,
        "async": false
      },
      {
        "name": "drawLayers",
        "static": false,
        "async": false
      },
      {
        "name": "drawHoverLine",
        "static": false,
        "async": false
      },
      {
        "name": "drawPlayhead",
        "static": false,
        "async": false
      },
      {
        "name": "updateTimelineInfo",
        "static": false,
        "async": false
      },
      {
        "name": "resetZoom",
        "static": false,
        "async": false
      },
      {
        "name": "toggleGrid",
        "static": false,
        "async": false
      },
      {
        "name": "setGridResolution",
        "static": false,
        "async": false
      },
      {
        "name": "updateZoomLabel",
        "static": false,
        "async": false
      },
      {
        "name": "showCountIn",
        "static": false,
        "async": false
      },
      {
        "name": "hideCountIn",
        "static": false,
        "async": false
      },
      {
        "name": "updateLayers",
        "static": false,
        "async": false
      },
      {
        "name": "updateButtonStates",
        "static": false,
        "async": false
      },
      {
        "name": "updatePosition",
        "static": false,
        "async": false
      },
      {
        "name": "getInstrumentName",
        "static": false,
        "async": false
      },
      {
        "name": "getChannelColor",
        "static": false,
        "async": false
      },
      {
        "name": "hexToRgba",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/audio/Metronome.js": {
    "flatFile": "Metronome.js",
    "mainExport": {
      "type": "class",
      "name": "Metronome"
    },
    "methods": [
      {
        "name": "initAudioContext",
        "static": false,
        "async": false
      },
      {
        "name": "start",
        "static": false,
        "async": false
      },
      {
        "name": "stop",
        "static": false,
        "async": false
      },
      {
        "name": "scheduleNote",
        "static": false,
        "async": false
      },
      {
        "name": "playAccent",
        "static": false,
        "async": false
      },
      {
        "name": "playClick",
        "static": false,
        "async": false
      },
      {
        "name": "playTone",
        "static": false,
        "async": false
      },
      {
        "name": "triggerCallbacks",
        "static": false,
        "async": false
      },
      {
        "name": "setTempo",
        "static": false,
        "async": false
      },
      {
        "name": "setBeatsPerBar",
        "static": false,
        "async": false
      },
      {
        "name": "setVolume",
        "static": false,
        "async": false
      },
      {
        "name": "setFrequencies",
        "static": false,
        "async": false
      },
      {
        "name": "getState",
        "static": false,
        "async": false
      },
      {
        "name": "isPlaying",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/utils/MetronomeEngine.js": {
    "flatFile": "MetronomeEngine.js",
    "mainExport": {
      "type": "class",
      "name": "KeyboardView"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "detectOptimalLayout",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "buildDrumGrid",
        "static": false,
        "async": false
      },
      {
        "name": "calculateGridSize",
        "static": false,
        "async": false
      },
      {
        "name": "buildScaleLinear",
        "static": false,
        "async": false
      },
      {
        "name": "buildPianoRoll",
        "static": false,
        "async": false
      },
      {
        "name": "buildCustomLayout",
        "static": false,
        "async": false
      },
      {
        "name": "getScalePattern",
        "static": false,
        "async": false
      },
      {
        "name": "generateScaleNotes",
        "static": false,
        "async": false
      },
      {
        "name": "buildTonicOptions",
        "static": false,
        "async": false
      },
      {
        "name": "getScaleDegree",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "handlePadDown",
        "static": false,
        "async": false
      },
      {
        "name": "handlePadUp",
        "static": false,
        "async": false
      },
      {
        "name": "calculateVelocity",
        "static": false,
        "async": false
      },
      {
        "name": "emitNoteOn",
        "static": false,
        "async": false
      },
      {
        "name": "emitNoteOff",
        "static": false,
        "async": false
      },
      {
        "name": "changeLayout",
        "static": false,
        "async": false
      },
      {
        "name": "changeScale",
        "static": false,
        "async": false
      },
      {
        "name": "changeTonic",
        "static": false,
        "async": false
      },
      {
        "name": "transposeOctave",
        "static": false,
        "async": false
      },
      {
        "name": "handleKeyDown",
        "static": false,
        "async": false
      },
      {
        "name": "handleKeyUp",
        "static": false,
        "async": false
      },
      {
        "name": "getPadColor",
        "static": false,
        "async": false
      },
      {
        "name": "getNoteName",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/utils/MidiConstants.js": {
    "flatFile": "MidiConstants.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/MidiFilterController.js": {
    "flatFile": "MidiFilterController.js",
    "mainExport": {
      "type": "class",
      "name": "MidiFilterController"
    },
    "methods": [
      {
        "name": "setMessageTypeFilter",
        "static": false,
        "async": false
      },
      {
        "name": "setChannelFilter",
        "static": false,
        "async": false
      },
      {
        "name": "setNoteRangeFilter",
        "static": false,
        "async": false
      },
      {
        "name": "setVelocityFilter",
        "static": false,
        "async": false
      },
      {
        "name": "setCCFilter",
        "static": false,
        "async": false
      },
      {
        "name": "filterEvent",
        "static": false,
        "async": false
      },
      {
        "name": "filterTimeline",
        "static": false,
        "async": false
      },
      {
        "name": "resetFilters",
        "static": false,
        "async": false
      },
      {
        "name": "getFilterStats",
        "static": false,
        "async": false
      },
      {
        "name": "emitFilterChanged",
        "static": false,
        "async": false
      },
      {
        "name": "saveConfiguration",
        "static": false,
        "async": false
      },
      {
        "name": "loadConfiguration",
        "static": false,
        "async": false
      },
      {
        "name": "getSavedConfigurations",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/src/utils/MidiJsonConverter.js": {
    "flatFile": "MidiJsonConverter.js",
    "mainExport": {
      "type": "class",
      "name": "MidiJsonConverter"
    },
    "methods": [
      {
        "name": "midiToJson",
        "static": false,
        "async": true
      },
      {
        "name": "parseMidiHeader",
        "static": false,
        "async": false
      },
      {
        "name": "parseMidiTrack",
        "static": false,
        "async": false
      },
      {
        "name": "parseChannelEvent",
        "static": false,
        "async": false
      },
      {
        "name": "parseMetaEvent",
        "static": false,
        "async": false
      },
      {
        "name": "readVariableLength",
        "static": false,
        "async": false
      },
      {
        "name": "extractMetadata",
        "static": false,
        "async": false
      },
      {
        "name": "jsonToMidi",
        "static": false,
        "async": true
      },
      {
        "name": "createMidiHeader",
        "static": false,
        "async": false
      },
      {
        "name": "organizeEventsIntoTracks",
        "static": false,
        "async": false
      },
      {
        "name": "createMidiTrack",
        "static": false,
        "async": false
      },
      {
        "name": "encodeEvent",
        "static": false,
        "async": false
      },
      {
        "name": "encodeMetaEvent",
        "static": false,
        "async": false
      },
      {
        "name": "writeVariableLength",
        "static": false,
        "async": false
      },
      {
        "name": "validate",
        "static": false,
        "async": false
      },
      {
        "name": "generateEventId",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/utils/MidiParser.js": {
    "flatFile": "MidiParser.js",
    "mainExport": {
      "type": "class",
      "name": "MidiParser"
    },
    "methods": [
      {
        "name": "parseFile",
        "static": false,
        "async": true
      },
      {
        "name": "parseHeader",
        "static": false,
        "async": false
      },
      {
        "name": "parseTrack",
        "static": false,
        "async": false
      },
      {
        "name": "parseEvent",
        "static": false,
        "async": false
      },
      {
        "name": "parseChannelEvent",
        "static": false,
        "async": false
      },
      {
        "name": "parseMetaEvent",
        "static": false,
        "async": false
      },
      {
        "name": "parseSysExEvent",
        "static": false,
        "async": false
      },
      {
        "name": "readVariableLength",
        "static": false,
        "async": false
      },
      {
        "name": "readString",
        "static": false,
        "async": false
      },
      {
        "name": "getEventTypeName",
        "static": false,
        "async": false
      },
      {
        "name": "getMetaTypeName",
        "static": false,
        "async": false
      },
      {
        "name": "extractNotes",
        "static": false,
        "async": false
      },
      {
        "name": "extractAllNotes",
        "static": false,
        "async": false
      },
      {
        "name": "extractTrackName",
        "static": false,
        "async": false
      },
      {
        "name": "extractInstrument",
        "static": false,
        "async": false
      },
      {
        "name": "extractChannel",
        "static": false,
        "async": false
      },
      {
        "name": "extractProgram",
        "static": false,
        "async": false
      },
      {
        "name": "extractTempo",
        "static": false,
        "async": false
      },
      {
        "name": "extractTempoChanges",
        "static": false,
        "async": false
      },
      {
        "name": "extractTimeSignature",
        "static": false,
        "async": false
      },
      {
        "name": "calculateDuration",
        "static": false,
        "async": false
      },
      {
        "name": "extractMetadata",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/scripts/services/MidiService.js": {
    "flatFile": "MidiService.js",
    "mainExport": {
      "type": "class",
      "name": "MidiService"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "parseFile",
        "static": false,
        "async": true
      },
      {
        "name": "readChunk",
        "static": false,
        "async": false
      },
      {
        "name": "parseTrack",
        "static": false,
        "async": false
      },
      {
        "name": "readVariableLength",
        "static": false,
        "async": false
      },
      {
        "name": "readString",
        "static": false,
        "async": false
      },
      {
        "name": "calculateDuration",
        "static": false,
        "async": false
      },
      {
        "name": "extractBPM",
        "static": false,
        "async": false
      },
      {
        "name": "getNoteName",
        "static": false,
        "async": false
      },
      {
        "name": "formatDuration",
        "static": false,
        "async": false
      },
      {
        "name": "isValidMidiFile",
        "static": false,
        "async": false
      },
      {
        "name": "isSupportedFormat",
        "static": false,
        "async": false
      },
      {
        "name": "generateCacheKey",
        "static": false,
        "async": false
      },
      {
        "name": "cleanCache",
        "static": false,
        "async": false
      },
      {
        "name": "clearCache",
        "static": false,
        "async": false
      },
      {
        "name": "getStats",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "MidiUtils.js": {
    "flatFile": "MidiUtils.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/core/MidiVisualizer.js": {
    "flatFile": "MidiVisualizer.js",
    "mainExport": {
      "type": "class",
      "name": "MidiVisualizer"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "loadMidiData",
        "static": false,
        "async": false
      },
      {
        "name": "clearData",
        "static": false,
        "async": false
      },
      {
        "name": "setMode",
        "static": false,
        "async": false
      },
      {
        "name": "getMode",
        "static": false,
        "async": false
      },
      {
        "name": "setTool",
        "static": false,
        "async": false
      },
      {
        "name": "getTool",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "renderPlayhead",
        "static": false,
        "async": false
      },
      {
        "name": "updatePlayhead",
        "static": false,
        "async": false
      },
      {
        "name": "play",
        "static": false,
        "async": false
      },
      {
        "name": "pause",
        "static": false,
        "async": false
      },
      {
        "name": "stop",
        "static": false,
        "async": false
      },
      {
        "name": "setActiveNotes",
        "static": false,
        "async": false
      },
      {
        "name": "addNote",
        "static": false,
        "async": false
      },
      {
        "name": "deleteNotes",
        "static": false,
        "async": false
      },
      {
        "name": "updateStats",
        "static": false,
        "async": false
      },
      {
        "name": "updateFPS",
        "static": false,
        "async": false
      },
      {
        "name": "getStats",
        "static": false,
        "async": false
      },
      {
        "name": "handleResize",
        "static": false,
        "async": false
      },
      {
        "name": "onViewChanged",
        "static": false,
        "async": false
      },
      {
        "name": "emit",
        "static": false,
        "async": false
      },
      {
        "name": "on",
        "static": false,
        "async": false
      },
      {
        "name": "off",
        "static": false,
        "async": false
      },
      {
        "name": "generateNoteId",
        "static": false,
        "async": false
      },
      {
        "name": "createDummyEventBus",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/scripts/views/components/Modal.js": {
    "flatFile": "Modal.js",
    "mainExport": {
      "type": "class",
      "name": "Modal"
    },
    "methods": [
      {
        "name": "alert",
        "static": true,
        "async": false
      },
      {
        "name": "confirm",
        "static": true,
        "async": false
      },
      {
        "name": "prompt",
        "static": true,
        "async": false
      },
      {
        "name": "closeAll",
        "static": true,
        "async": false
      },
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "createElement",
        "static": false,
        "async": false
      },
      {
        "name": "buildModalContent",
        "static": false,
        "async": false
      },
      {
        "name": "buildButtons",
        "static": false,
        "async": false
      },
      {
        "name": "getIcon",
        "static": false,
        "async": false
      },
      {
        "name": "applyStyles",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "handleButtonClick",
        "static": false,
        "async": false
      },
      {
        "name": "show",
        "static": false,
        "async": false
      },
      {
        "name": "hide",
        "static": false,
        "async": false
      },
      {
        "name": "toggle",
        "static": false,
        "async": false
      },
      {
        "name": "setTitle",
        "static": false,
        "async": false
      },
      {
        "name": "setContent",
        "static": false,
        "async": false
      },
      {
        "name": "appendContent",
        "static": false,
        "async": false
      },
      {
        "name": "setButtons",
        "static": false,
        "async": false
      },
      {
        "name": "shake",
        "static": false,
        "async": false
      },
      {
        "name": "focusFirstElement",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/ModalController.js": {
    "flatFile": "ModalController.js",
    "mainExport": {
      "type": "class",
      "name": "ModalController"
    },
    "methods": [
      {
        "name": "bindEvents",
        "static": false,
        "async": false
      },
      {
        "name": "initializeModals",
        "static": false,
        "async": false
      },
      {
        "name": "createModalContainers",
        "static": false,
        "async": false
      },
      {
        "name": "setupGlobalEvents",
        "static": false,
        "async": false
      },
      {
        "name": "open",
        "static": false,
        "async": true
      },
      {
        "name": "close",
        "static": false,
        "async": true
      },
      {
        "name": "closeTopModal",
        "static": false,
        "async": false
      },
      {
        "name": "closeAll",
        "static": false,
        "async": false
      },
      {
        "name": "confirm",
        "static": false,
        "async": false
      },
      {
        "name": "alert",
        "static": false,
        "async": false
      },
      {
        "name": "error",
        "static": false,
        "async": false
      },
      {
        "name": "openChannelSettings",
        "static": false,
        "async": false
      },
      {
        "name": "openInstrumentConfig",
        "static": false,
        "async": false
      },
      {
        "name": "openPlaylistEditor",
        "static": false,
        "async": false
      },
      {
        "name": "generateModalContent",
        "static": false,
        "async": true
      },
      {
        "name": "buildChannelSettingsContent",
        "static": false,
        "async": false
      },
      {
        "name": "buildInstrumentConfigContent",
        "static": false,
        "async": false
      },
      {
        "name": "buildPlaylistEditorContent",
        "static": false,
        "async": false
      },
      {
        "name": "buildConfirmationContent",
        "static": false,
        "async": false
      },
      {
        "name": "buildInformationContent",
        "static": false,
        "async": false
      },
      {
        "name": "buildErrorContent",
        "static": false,
        "async": false
      },
      {
        "name": "buildAllModalsHTML",
        "static": false,
        "async": false
      },
      {
        "name": "updateModalContent",
        "static": false,
        "async": false
      },
      {
        "name": "animateModalOpen",
        "static": false,
        "async": false
      },
      {
        "name": "animateModalClose",
        "static": false,
        "async": false
      },
      {
        "name": "setupModalFocus",
        "static": false,
        "async": false
      },
      {
        "name": "restoreFocus",
        "static": false,
        "async": false
      },
      {
        "name": "handleTabKey",
        "static": false,
        "async": false
      },
      {
        "name": "invalidateCache",
        "static": false,
        "async": false
      },
      {
        "name": "buildAvailableFilesList",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "NavigationController.js": {
    "flatFile": "NavigationController.js",
    "mainExport": {
      "type": "class",
      "name": "NavigationController"
    },
    "methods": [
      {
        "name": "bindEvents",
        "static": false,
        "async": false
      },
      {
        "name": "initializeNavigation",
        "static": false,
        "async": false
      },
      {
        "name": "setupKeyboardShortcuts",
        "static": false,
        "async": false
      },
      {
        "name": "setupBrowserHistory",
        "static": false,
        "async": false
      },
      {
        "name": "showPage",
        "static": false,
        "async": true
      },
      {
        "name": "performPageTransition",
        "static": false,
        "async": true
      },
      {
        "name": "animatePageOut",
        "static": false,
        "async": false
      },
      {
        "name": "animatePageIn",
        "static": false,
        "async": false
      },
      {
        "name": "getPageContent",
        "static": false,
        "async": true
      },
      {
        "name": "generatePageContent",
        "static": false,
        "async": true
      },
      {
        "name": "getPageData",
        "static": false,
        "async": false
      },
      {
        "name": "getErrorPageContent",
        "static": false,
        "async": false
      },
      {
        "name": "cachePageContent",
        "static": false,
        "async": false
      },
      {
        "name": "invalidatePageCache",
        "static": false,
        "async": false
      },
      {
        "name": "clearAllCache",
        "static": false,
        "async": false
      },
      {
        "name": "addToHistory",
        "static": false,
        "async": false
      },
      {
        "name": "goBack",
        "static": false,
        "async": false
      },
      {
        "name": "goForward",
        "static": false,
        "async": false
      },
      {
        "name": "refreshCurrentPage",
        "static": false,
        "async": false
      },
      {
        "name": "refreshPageView",
        "static": false,
        "async": false
      },
      {
        "name": "getCurrentPage",
        "static": false,
        "async": false
      },
      {
        "name": "isPageCacheable",
        "static": false,
        "async": false
      },
      {
        "name": "updateNavigationUI",
        "static": false,
        "async": false
      },
      {
        "name": "handleModelChange",
        "static": false,
        "async": false
      },
      {
        "name": "getSystemStats",
        "static": false,
        "async": false
      },
      {
        "name": "getSystemHealth",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/renderers/NoteRenderer.js": {
    "flatFile": "NoteRenderer.js",
    "mainExport": {
      "type": "class",
      "name": "NoteRenderer"
    },
    "methods": [
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "renderChannelNotes",
        "static": false,
        "async": false
      },
      {
        "name": "drawNote",
        "static": false,
        "async": false
      },
      {
        "name": "getVelocityGradient",
        "static": false,
        "async": false
      },
      {
        "name": "fillRoundedRect",
        "static": false,
        "async": false
      },
      {
        "name": "strokeRoundedRect",
        "static": false,
        "async": false
      },
      {
        "name": "drawNoteName",
        "static": false,
        "async": false
      },
      {
        "name": "renderActiveNotes",
        "static": false,
        "async": false
      },
      {
        "name": "getVisibleNotes",
        "static": false,
        "async": false
      },
      {
        "name": "groupByChannel",
        "static": false,
        "async": false
      },
      {
        "name": "getDefaultChannelColors",
        "static": false,
        "async": false
      },
      {
        "name": "getChannelColor",
        "static": false,
        "async": false
      },
      {
        "name": "getLighterColor",
        "static": false,
        "async": false
      },
      {
        "name": "getDarkerColor",
        "static": false,
        "async": false
      },
      {
        "name": "getNoteNameFromNumber",
        "static": false,
        "async": false
      },
      {
        "name": "clearCache",
        "static": false,
        "async": false
      },
      {
        "name": "getStats",
        "static": false,
        "async": false
      },
      {
        "name": "setConfig",
        "static": false,
        "async": false
      },
      {
        "name": "setVisible",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/ui/NotificationManager.js": {
    "flatFile": "NotificationManager.js",
    "mainExport": {
      "type": "class",
      "name": "NotificationManager"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "show",
        "static": false,
        "async": false
      },
      {
        "name": "createNotification",
        "static": false,
        "async": false
      },
      {
        "name": "getIcon",
        "static": false,
        "async": false
      },
      {
        "name": "dismiss",
        "static": false,
        "async": false
      },
      {
        "name": "dismissOldest",
        "static": false,
        "async": false
      },
      {
        "name": "dismissAll",
        "static": false,
        "async": false
      },
      {
        "name": "success",
        "static": false,
        "async": false
      },
      {
        "name": "error",
        "static": false,
        "async": false
      },
      {
        "name": "warning",
        "static": false,
        "async": false
      },
      {
        "name": "info",
        "static": false,
        "async": false
      },
      {
        "name": "escapeHtml",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/utils/Notifications.js": {
    "flatFile": "Notifications.js",
    "mainExport": {
      "type": "class",
      "name": "Notifications"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "createContainer",
        "static": false,
        "async": false
      },
      {
        "name": "bindEvents",
        "static": false,
        "async": false
      },
      {
        "name": "show",
        "static": false,
        "async": false
      },
      {
        "name": "success",
        "static": false,
        "async": false
      },
      {
        "name": "error",
        "static": false,
        "async": false
      },
      {
        "name": "warning",
        "static": false,
        "async": false
      },
      {
        "name": "info",
        "static": false,
        "async": false
      },
      {
        "name": "close",
        "static": false,
        "async": false
      },
      {
        "name": "closeAll",
        "static": false,
        "async": false
      },
      {
        "name": "createNotification",
        "static": false,
        "async": false
      },
      {
        "name": "addToQueue",
        "static": false,
        "async": false
      },
      {
        "name": "processQueue",
        "static": false,
        "async": false
      },
      {
        "name": "displayNotification",
        "static": false,
        "async": false
      },
      {
        "name": "createNotificationElement",
        "static": false,
        "async": false
      },
      {
        "name": "createActionsHTML",
        "static": false,
        "async": false
      },
      {
        "name": "attachNotificationEvents",
        "static": false,
        "async": false
      },
      {
        "name": "removeNotification",
        "static": false,
        "async": false
      },
      {
        "name": "getDefaultIcon",
        "static": false,
        "async": false
      },
      {
        "name": "playSound",
        "static": false,
        "async": false
      },
      {
        "name": "vibrate",
        "static": false,
        "async": false
      },
      {
        "name": "injectStyles",
        "static": false,
        "async": false
      },
      {
        "name": "setPosition",
        "static": false,
        "async": false
      },
      {
        "name": "getStats",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/config/PerformanceConfig.js": {
    "flatFile": "PerformanceConfig.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/PerformanceController.js": {
    "flatFile": "PerformanceController.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/monitoring/PerformanceMonitor.js": {
    "flatFile": "PerformanceMonitor.js",
    "mainExport": {
      "type": "class",
      "name": "PerformanceMonitor"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "setupEventListeners",
        "static": false,
        "async": false
      },
      {
        "name": "startMonitoring",
        "static": false,
        "async": false
      },
      {
        "name": "stopMonitoring",
        "static": false,
        "async": false
      },
      {
        "name": "collectSample",
        "static": false,
        "async": false
      },
      {
        "name": "startMeasure",
        "static": false,
        "async": false
      },
      {
        "name": "endMeasure",
        "static": false,
        "async": false
      },
      {
        "name": "recordLatency",
        "static": false,
        "async": false
      },
      {
        "name": "measureFunction",
        "static": false,
        "async": true
      },
      {
        "name": "startFpsCounter",
        "static": false,
        "async": false
      },
      {
        "name": "updateMemoryMetrics",
        "static": false,
        "async": false
      },
      {
        "name": "updateEventRate",
        "static": false,
        "async": false
      },
      {
        "name": "addAlert",
        "static": false,
        "async": false
      },
      {
        "name": "checkThresholds",
        "static": false,
        "async": false
      },
      {
        "name": "getAverageLatency",
        "static": false,
        "async": false
      },
      {
        "name": "getMetrics",
        "static": false,
        "async": false
      },
      {
        "name": "getReport",
        "static": false,
        "async": false
      },
      {
        "name": "exportMetrics",
        "static": false,
        "async": false
      },
      {
        "name": "getLastValue",
        "static": false,
        "async": false
      },
      {
        "name": "cleanupHistory",
        "static": false,
        "async": false
      },
      {
        "name": "reset",
        "static": false,
        "async": false
      },
      {
        "name": "logMetrics",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      },
      {
        "name": "async",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/PianoRollController.js": {
    "flatFile": "PianoRollController.js",
    "mainExport": {
      "type": "class",
      "name": "PianoRollController"
    },
    "methods": [
      {
        "name": "bindEvents",
        "static": false,
        "async": false
      },
      {
        "name": "handleStateChange",
        "static": false,
        "async": false
      },
      {
        "name": "loadMidiFile",
        "static": false,
        "async": false
      },
      {
        "name": "initializeChannelStates",
        "static": false,
        "async": false
      },
      {
        "name": "calculateNoteRange",
        "static": false,
        "async": false
      },
      {
        "name": "getChannelColor",
        "static": false,
        "async": false
      },
      {
        "name": "optimizeRenderOrder",
        "static": false,
        "async": false
      },
      {
        "name": "initializeRenderCache",
        "static": false,
        "async": false
      },
      {
        "name": "segmentNotes",
        "static": false,
        "async": false
      },
      {
        "name": "preprocessNotes",
        "static": false,
        "async": false
      },
      {
        "name": "toggleChannelMute",
        "static": false,
        "async": false
      },
      {
        "name": "toggleChannelSolo",
        "static": false,
        "async": false
      },
      {
        "name": "setChannelVolume",
        "static": false,
        "async": false
      },
      {
        "name": "selectChannel",
        "static": false,
        "async": false
      },
      {
        "name": "timeToPixel",
        "static": false,
        "async": false
      },
      {
        "name": "noteToPixel",
        "static": false,
        "async": false
      },
      {
        "name": "durationToPixel",
        "static": false,
        "async": false
      },
      {
        "name": "velocityToColor",
        "static": false,
        "async": false
      },
      {
        "name": "velocityToOpacity",
        "static": false,
        "async": false
      },
      {
        "name": "updatePlaybackPosition",
        "static": false,
        "async": false
      },
      {
        "name": "updateVisualizerPosition",
        "static": false,
        "async": false
      },
      {
        "name": "shouldAutoScroll",
        "static": false,
        "async": false
      },
      {
        "name": "clearMidiData",
        "static": false,
        "async": false
      },
      {
        "name": "refreshDisplay",
        "static": false,
        "async": false
      },
      {
        "name": "refreshChannelDisplay",
        "static": false,
        "async": false
      },
      {
        "name": "invalidateRenderCacheIfNeeded",
        "static": false,
        "async": false
      },
      {
        "name": "stopAllNotes",
        "static": false,
        "async": false
      },
      {
        "name": "stopChannelNotes",
        "static": false,
        "async": false
      },
      {
        "name": "onSyncPlaybackStarted",
        "static": false,
        "async": false
      },
      {
        "name": "onSyncPlaybackStopped",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/renderers/PianoRollRenderer.js": {
    "flatFile": "PianoRollRenderer.js",
    "mainExport": {
      "type": "class",
      "name": "PianoRollRenderer"
    },
    "methods": [
      {
        "name": "renderNotes",
        "static": false,
        "async": false
      },
      {
        "name": "renderNote",
        "static": false,
        "async": false
      },
      {
        "name": "getNoteColor",
        "static": false,
        "async": false
      },
      {
        "name": "isNoteVisible",
        "static": false,
        "async": false
      },
      {
        "name": "getNoteAtPosition",
        "static": false,
        "async": false
      },
      {
        "name": "getNotesInRegion",
        "static": false,
        "async": false
      },
      {
        "name": "setHoveredNote",
        "static": false,
        "async": false
      },
      {
        "name": "clearHover",
        "static": false,
        "async": false
      },
      {
        "name": "renderSelection",
        "static": false,
        "async": false
      },
      {
        "name": "getSelectionBounds",
        "static": false,
        "async": false
      },
      {
        "name": "renderGhostNote",
        "static": false,
        "async": false
      },
      {
        "name": "renderPianoKeys",
        "static": false,
        "async": false
      },
      {
        "name": "isBlackKey",
        "static": false,
        "async": false
      },
      {
        "name": "getNoteLabel",
        "static": false,
        "async": false
      },
      {
        "name": "setColors",
        "static": false,
        "async": false
      },
      {
        "name": "getConfig",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/PianoRollView.js": {
    "flatFile": "PianoRollView.js",
    "mainExport": {
      "type": "class",
      "name": "PianoRollView"
    },
    "methods": [
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "handleClick",
        "static": false,
        "async": false
      },
      {
        "name": "invalidate",
        "static": false,
        "async": false
      },
      {
        "name": "startRenderLoop",
        "static": false,
        "async": false
      },
      {
        "name": "drawGrid",
        "static": false,
        "async": false
      },
      {
        "name": "drawNotes",
        "static": false,
        "async": false
      },
      {
        "name": "drawSelectionRect",
        "static": false,
        "async": false
      },
      {
        "name": "drawHoverHighlight",
        "static": false,
        "async": false
      },
      {
        "name": "drawPlayhead",
        "static": false,
        "async": false
      },
      {
        "name": "showTooltip",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "onMouseDown",
        "static": false,
        "async": false
      },
      {
        "name": "onMouseMove",
        "static": false,
        "async": false
      },
      {
        "name": "onMouseUp",
        "static": false,
        "async": false
      },
      {
        "name": "onWheel",
        "static": false,
        "async": false
      },
      {
        "name": "onMouseLeave",
        "static": false,
        "async": false
      },
      {
        "name": "findNoteAt",
        "static": false,
        "async": false
      },
      {
        "name": "isResizeHandle",
        "static": false,
        "async": false
      },
      {
        "name": "moveSelectedNotes",
        "static": false,
        "async": false
      },
      {
        "name": "selectNotesInRect",
        "static": false,
        "async": false
      },
      {
        "name": "normalizeRect",
        "static": false,
        "async": false
      },
      {
        "name": "rectsIntersect",
        "static": false,
        "async": false
      },
      {
        "name": "updateCursor",
        "static": false,
        "async": false
      },
      {
        "name": "timeToX",
        "static": false,
        "async": false
      },
      {
        "name": "xToTime",
        "static": false,
        "async": false
      },
      {
        "name": "noteToY",
        "static": false,
        "async": false
      },
      {
        "name": "yToNote",
        "static": false,
        "async": false
      },
      {
        "name": "getChannelColor",
        "static": false,
        "async": false
      },
      {
        "name": "getNoteName",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/PlaybackController.js": {
    "flatFile": "PlaybackController.js",
    "mainExport": {
      "type": "class",
      "name": "PlaybackController"
    },
    "methods": [
      {
        "name": "onInitialize",
        "static": false,
        "async": false
      },
      {
        "name": "bindEvents",
        "static": false,
        "async": false
      },
      {
        "name": "onDestroy",
        "static": false,
        "async": false
      },
      {
        "name": "disableUI",
        "static": false,
        "async": false
      },
      {
        "name": "enableUI",
        "static": false,
        "async": false
      },
      {
        "name": "play",
        "static": false,
        "async": true
      },
      {
        "name": "pause",
        "static": false,
        "async": true
      },
      {
        "name": "stop",
        "static": false,
        "async": true
      },
      {
        "name": "seek",
        "static": false,
        "async": true
      },
      {
        "name": "setTempo",
        "static": false,
        "async": true
      },
      {
        "name": "toggleLoop",
        "static": false,
        "async": true
      },
      {
        "name": "setVolume",
        "static": false,
        "async": true
      },
      {
        "name": "loadFile",
        "static": false,
        "async": true
      },
      {
        "name": "startPositionUpdate",
        "static": false,
        "async": false
      },
      {
        "name": "stopPositionUpdate",
        "static": false,
        "async": false
      },
      {
        "name": "handlePlaybackStateChanged",
        "static": false,
        "async": false
      },
      {
        "name": "handlePositionChanged",
        "static": false,
        "async": false
      },
      {
        "name": "handlePlaybackFinished",
        "static": false,
        "async": false
      },
      {
        "name": "updateUI",
        "static": false,
        "async": false
      },
      {
        "name": "handleError",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/models/PlaybackModel.js": {
    "flatFile": "PlaybackModel.js",
    "mainExport": {
      "type": "class",
      "name": "PlaybackModel"
    },
    "methods": [
      {
        "name": "updateFromBackend",
        "static": false,
        "async": false
      },
      {
        "name": "startPositionUpdate",
        "static": false,
        "async": false
      },
      {
        "name": "stopPositionUpdate",
        "static": false,
        "async": false
      },
      {
        "name": "setLoop",
        "static": false,
        "async": false
      },
      {
        "name": "setRepeatMode",
        "static": false,
        "async": false
      },
      {
        "name": "checkLoopBoundaries",
        "static": false,
        "async": false
      },
      {
        "name": "calculateProgress",
        "static": false,
        "async": false
      },
      {
        "name": "formatPosition",
        "static": false,
        "async": false
      },
      {
        "name": "formatDuration",
        "static": false,
        "async": false
      },
      {
        "name": "isPlaying",
        "static": false,
        "async": false
      },
      {
        "name": "isPaused",
        "static": false,
        "async": false
      },
      {
        "name": "isStopped",
        "static": false,
        "async": false
      },
      {
        "name": "isLooping",
        "static": false,
        "async": false
      },
      {
        "name": "getRepeatMode",
        "static": false,
        "async": false
      },
      {
        "name": "getPlaybackInfo",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/PlaylistController.js": {
    "flatFile": "PlaylistController.js",
    "mainExport": {
      "type": "class",
      "name": "PlaylistController"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "setPlaybackController",
        "static": false,
        "async": false
      },
      {
        "name": "bindEvents",
        "static": false,
        "async": false
      },
      {
        "name": "createPlaylist",
        "static": false,
        "async": true
      },
      {
        "name": "loadPlaylist",
        "static": false,
        "async": true
      },
      {
        "name": "updatePlaylist",
        "static": false,
        "async": true
      },
      {
        "name": "deletePlaylist",
        "static": false,
        "async": true
      },
      {
        "name": "addFileToPlaylist",
        "static": false,
        "async": true
      },
      {
        "name": "removeFileFromPlaylist",
        "static": false,
        "async": true
      },
      {
        "name": "next",
        "static": false,
        "async": true
      },
      {
        "name": "previous",
        "static": false,
        "async": true
      },
      {
        "name": "jumpTo",
        "static": false,
        "async": true
      },
      {
        "name": "addToQueue",
        "static": false,
        "async": false
      },
      {
        "name": "addMultipleToQueue",
        "static": false,
        "async": false
      },
      {
        "name": "removeFromQueue",
        "static": false,
        "async": false
      },
      {
        "name": "clearQueue",
        "static": false,
        "async": false
      },
      {
        "name": "playQueue",
        "static": false,
        "async": true
      },
      {
        "name": "reorderQueue",
        "static": false,
        "async": false
      },
      {
        "name": "toggleQueueVisibility",
        "static": false,
        "async": false
      },
      {
        "name": "toggleShuffle",
        "static": false,
        "async": false
      },
      {
        "name": "setRepeatMode",
        "static": false,
        "async": false
      },
      {
        "name": "cycleRepeatMode",
        "static": false,
        "async": false
      },
      {
        "name": "toggleAutoAdvance",
        "static": false,
        "async": false
      },
      {
        "name": "onPlaylistCreated",
        "static": false,
        "async": false
      },
      {
        "name": "onPlaylistLoaded",
        "static": false,
        "async": false
      },
      {
        "name": "onPlaylistUpdated",
        "static": false,
        "async": false
      },
      {
        "name": "onPlaylistDeleted",
        "static": false,
        "async": false
      },
      {
        "name": "onNext",
        "static": false,
        "async": false
      },
      {
        "name": "onPrevious",
        "static": false,
        "async": false
      },
      {
        "name": "onJump",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/PlaylistController_ImportExport.js": {
    "flatFile": "PlaylistController_ImportExport.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/models/PlaylistModel.js": {
    "flatFile": "PlaylistModel.js",
    "mainExport": {
      "type": "class",
      "name": "PlaylistModel"
    },
    "methods": [
      {
        "name": "createPlaylist",
        "static": false,
        "async": true
      },
      {
        "name": "loadPlaylist",
        "static": false,
        "async": true
      },
      {
        "name": "deletePlaylist",
        "static": false,
        "async": true
      },
      {
        "name": "getCurrentFile",
        "static": false,
        "async": false
      },
      {
        "name": "next",
        "static": false,
        "async": false
      },
      {
        "name": "previous",
        "static": false,
        "async": false
      },
      {
        "name": "jumpTo",
        "static": false,
        "async": false
      },
      {
        "name": "getAllPlaylists",
        "static": false,
        "async": false
      },
      {
        "name": "getPlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "getCurrentPlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "getCurrentIndex",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/PlaylistView.js": {
    "flatFile": "PlaylistView.js",
    "mainExport": {
      "type": "class",
      "name": "PlaylistView"
    },
    "methods": [
      {
        "name": "buildTemplate",
        "static": false,
        "async": false
      },
      {
        "name": "renderHeader",
        "static": false,
        "async": false
      },
      {
        "name": "renderControls",
        "static": false,
        "async": false
      },
      {
        "name": "getRepeatIcon",
        "static": false,
        "async": false
      },
      {
        "name": "getRepeatLabel",
        "static": false,
        "async": false
      },
      {
        "name": "renderPlaylistsList",
        "static": false,
        "async": false
      },
      {
        "name": "renderPlaylistItem",
        "static": false,
        "async": false
      },
      {
        "name": "renderEmptyPlaylists",
        "static": false,
        "async": false
      },
      {
        "name": "renderCurrentPlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "renderNoPlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "renderEmptyPlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "renderFileItem",
        "static": false,
        "async": false
      },
      {
        "name": "renderQueuePanel",
        "static": false,
        "async": false
      },
      {
        "name": "renderEmptyQueue",
        "static": false,
        "async": false
      },
      {
        "name": "renderQueueItem",
        "static": false,
        "async": false
      },
      {
        "name": "renderStats",
        "static": false,
        "async": false
      },
      {
        "name": "updateCurrentFile",
        "static": false,
        "async": false
      },
      {
        "name": "updateShuffleButton",
        "static": false,
        "async": false
      },
      {
        "name": "updateRepeatButton",
        "static": false,
        "async": false
      },
      {
        "name": "updateAutoAdvanceButton",
        "static": false,
        "async": false
      },
      {
        "name": "updateQueueStatus",
        "static": false,
        "async": false
      },
      {
        "name": "showQueuePlaying",
        "static": false,
        "async": false
      },
      {
        "name": "showPlaybackComplete",
        "static": false,
        "async": false
      },
      {
        "name": "onDragStart",
        "static": false,
        "async": false
      },
      {
        "name": "onDragOver",
        "static": false,
        "async": false
      },
      {
        "name": "onDrop",
        "static": false,
        "async": false
      },
      {
        "name": "refreshQueuePanel",
        "static": false,
        "async": false
      },
      {
        "name": "calculateTotalDuration",
        "static": false,
        "async": false
      },
      {
        "name": "formatDuration",
        "static": false,
        "async": false
      },
      {
        "name": "escapeHtml",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/scripts/views/components/ProgressBar.js": {
    "flatFile": "ProgressBar.js",
    "mainExport": {
      "type": "class",
      "name": "ProgressBar"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "applyStyles",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "handleClick",
        "static": false,
        "async": false
      },
      {
        "name": "startDrag",
        "static": false,
        "async": false
      },
      {
        "name": "handleDrag",
        "static": false,
        "async": false
      },
      {
        "name": "endDrag",
        "static": false,
        "async": false
      },
      {
        "name": "handleMouseMove",
        "static": false,
        "async": false
      },
      {
        "name": "showTooltip",
        "static": false,
        "async": false
      },
      {
        "name": "hideTooltip",
        "static": false,
        "async": false
      },
      {
        "name": "update",
        "static": false,
        "async": false
      },
      {
        "name": "updateVisual",
        "static": false,
        "async": false
      },
      {
        "name": "updateBuffer",
        "static": false,
        "async": false
      },
      {
        "name": "startSmoothUpdate",
        "static": false,
        "async": false
      },
      {
        "name": "stopSmoothUpdate",
        "static": false,
        "async": false
      },
      {
        "name": "seek",
        "static": false,
        "async": false
      },
      {
        "name": "reset",
        "static": false,
        "async": false
      },
      {
        "name": "getPercentFromEvent",
        "static": false,
        "async": false
      },
      {
        "name": "formatTime",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/renderers/RenderEngine.js": {
    "flatFile": "RenderEngine.js",
    "mainExport": {
      "type": "class",
      "name": "RenderEngine"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "createCanvas",
        "static": false,
        "async": false
      },
      {
        "name": "setupContext",
        "static": false,
        "async": false
      },
      {
        "name": "resize",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "setRenderer",
        "static": false,
        "async": false
      },
      {
        "name": "start",
        "static": false,
        "async": false
      },
      {
        "name": "stop",
        "static": false,
        "async": false
      },
      {
        "name": "animate",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "clear",
        "static": false,
        "async": false
      },
      {
        "name": "renderGrid",
        "static": false,
        "async": false
      },
      {
        "name": "renderNotes",
        "static": false,
        "async": false
      },
      {
        "name": "renderNotesBatched",
        "static": false,
        "async": false
      },
      {
        "name": "renderTimeline",
        "static": false,
        "async": false
      },
      {
        "name": "renderOverlay",
        "static": false,
        "async": false
      },
      {
        "name": "renderDebugInfo",
        "static": false,
        "async": false
      },
      {
        "name": "setNotes",
        "static": false,
        "async": false
      },
      {
        "name": "setSelection",
        "static": false,
        "async": false
      },
      {
        "name": "setMetadata",
        "static": false,
        "async": false
      },
      {
        "name": "setViewport",
        "static": false,
        "async": false
      },
      {
        "name": "getViewport",
        "static": false,
        "async": false
      },
      {
        "name": "getVisibleNotes",
        "static": false,
        "async": false
      },
      {
        "name": "timeToX",
        "static": false,
        "async": false
      },
      {
        "name": "noteToY",
        "static": false,
        "async": false
      },
      {
        "name": "xToTime",
        "static": false,
        "async": false
      },
      {
        "name": "yToNote",
        "static": false,
        "async": false
      },
      {
        "name": "getCanvas",
        "static": false,
        "async": false
      },
      {
        "name": "getContext",
        "static": false,
        "async": false
      },
      {
        "name": "getStats",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/scripts/core/Router.js": {
    "flatFile": "Router.js",
    "mainExport": {
      "type": "class",
      "name": "Router"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "loadInitialRoute",
        "static": false,
        "async": false
      },
      {
        "name": "route",
        "static": false,
        "async": false
      },
      {
        "name": "addRoutes",
        "static": false,
        "async": false
      },
      {
        "name": "notFound",
        "static": false,
        "async": false
      },
      {
        "name": "navigateTo",
        "static": false,
        "async": true
      },
      {
        "name": "loadRoute",
        "static": false,
        "async": true
      },
      {
        "name": "loadComponent",
        "static": false,
        "async": true
      },
      {
        "name": "renderComponent",
        "static": false,
        "async": false
      },
      {
        "name": "getContainer",
        "static": false,
        "async": false
      },
      {
        "name": "back",
        "static": false,
        "async": false
      },
      {
        "name": "forward",
        "static": false,
        "async": false
      },
      {
        "name": "reload",
        "static": false,
        "async": false
      },
      {
        "name": "replace",
        "static": false,
        "async": false
      },
      {
        "name": "handlePopState",
        "static": false,
        "async": false
      },
      {
        "name": "handleHashChange",
        "static": false,
        "async": false
      },
      {
        "name": "handleLinkClick",
        "static": false,
        "async": false
      },
      {
        "name": "use",
        "static": false,
        "async": false
      },
      {
        "name": "beforeEach",
        "static": false,
        "async": false
      },
      {
        "name": "afterEach",
        "static": false,
        "async": false
      },
      {
        "name": "executeHook",
        "static": false,
        "async": true
      },
      {
        "name": "transitionOut",
        "static": false,
        "async": true
      },
      {
        "name": "transitionIn",
        "static": false,
        "async": true
      },
      {
        "name": "wait",
        "static": false,
        "async": false
      },
      {
        "name": "getCurrentPath",
        "static": false,
        "async": false
      },
      {
        "name": "updateURL",
        "static": false,
        "async": false
      },
      {
        "name": "normalizePath",
        "static": false,
        "async": false
      },
      {
        "name": "pathToRegex",
        "static": false,
        "async": false
      },
      {
        "name": "matchRoute",
        "static": false,
        "async": false
      },
      {
        "name": "find404Route",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/scripts/controllers/RoutingController.js": {
    "flatFile": "RoutingController.js",
    "mainExport": {
      "type": "class",
      "name": "RoutingController"
    },
    "methods": [
      {
        "name": "logDebug",
        "static": false,
        "async": false
      },
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "bindEvents",
        "static": false,
        "async": false
      },
      {
        "name": "setupAutoSync",
        "static": false,
        "async": false
      },
      {
        "name": "onBackendConnected",
        "static": false,
        "async": false
      },
      {
        "name": "onBackendDisconnected",
        "static": false,
        "async": false
      },
      {
        "name": "onBackendStatus",
        "static": false,
        "async": false
      },
      {
        "name": "onBackendRoutingChanged",
        "static": false,
        "async": false
      },
      {
        "name": "onBackendDevicesChanged",
        "static": false,
        "async": false
      },
      {
        "name": "onChannelActivity",
        "static": false,
        "async": false
      },
      {
        "name": "loadFromBackend",
        "static": false,
        "async": true
      },
      {
        "name": "syncWithBackend",
        "static": false,
        "async": true
      },
      {
        "name": "applyPendingChanges",
        "static": false,
        "async": true
      },
      {
        "name": "updateRoutingFromBackend",
        "static": false,
        "async": false
      },
      {
        "name": "updateDevicesFromBackend",
        "static": false,
        "async": false
      },
      {
        "name": "assignChannelToDevice",
        "static": false,
        "async": true
      },
      {
        "name": "muteChannel",
        "static": false,
        "async": false
      },
      {
        "name": "soloChannel",
        "static": false,
        "async": false
      },
      {
        "name": "setChannelVolume",
        "static": false,
        "async": false
      },
      {
        "name": "setChannelTranspose",
        "static": false,
        "async": false
      },
      {
        "name": "setChannelPan",
        "static": false,
        "async": false
      },
      {
        "name": "setVelocityMapping",
        "static": false,
        "async": false
      },
      {
        "name": "setNoteFilter",
        "static": false,
        "async": false
      },
      {
        "name": "setNoteRemap",
        "static": false,
        "async": false
      },
      {
        "name": "setCCRemap",
        "static": false,
        "async": false
      },
      {
        "name": "setVelocityCurveLinear",
        "static": false,
        "async": false
      },
      {
        "name": "setVelocityCurveCompress",
        "static": false,
        "async": false
      },
      {
        "name": "setVelocityCurveExpand",
        "static": false,
        "async": false
      },
      {
        "name": "disableAllTransformations",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/utils/RoutingManager.js": {
    "flatFile": "RoutingManager.js",
    "mainExport": {
      "type": "class",
      "name": "RoutingManager"
    },
    "methods": [
      {
        "name": "setChannels",
        "static": false,
        "async": false
      },
      {
        "name": "setInstruments",
        "static": false,
        "async": false
      },
      {
        "name": "createRoute",
        "static": false,
        "async": false
      },
      {
        "name": "removeRoute",
        "static": false,
        "async": false
      },
      {
        "name": "clearAllRoutes",
        "static": false,
        "async": false
      },
      {
        "name": "autoAssign",
        "static": false,
        "async": false
      },
      {
        "name": "isValidChannel",
        "static": false,
        "async": false
      },
      {
        "name": "isValidInstrument",
        "static": false,
        "async": false
      },
      {
        "name": "validateRouting",
        "static": false,
        "async": false
      },
      {
        "name": "getRouteForChannel",
        "static": false,
        "async": false
      },
      {
        "name": "getRoutesForInstrument",
        "static": false,
        "async": false
      },
      {
        "name": "getAllRoutes",
        "static": false,
        "async": false
      },
      {
        "name": "getActiveRoutes",
        "static": false,
        "async": false
      },
      {
        "name": "getRouteById",
        "static": false,
        "async": false
      },
      {
        "name": "enableRoute",
        "static": false,
        "async": false
      },
      {
        "name": "disableRoute",
        "static": false,
        "async": false
      },
      {
        "name": "savePreset",
        "static": false,
        "async": false
      },
      {
        "name": "loadPreset",
        "static": false,
        "async": false
      },
      {
        "name": "getPresets",
        "static": false,
        "async": false
      },
      {
        "name": "updateStats",
        "static": false,
        "async": false
      },
      {
        "name": "getStats",
        "static": false,
        "async": false
      },
      {
        "name": "getState",
        "static": false,
        "async": false
      },
      {
        "name": "generateRouteId",
        "static": false,
        "async": false
      },
      {
        "name": "logDebug",
        "static": false,
        "async": false
      },
      {
        "name": "exportRouting",
        "static": false,
        "async": false
      },
      {
        "name": "importRouting",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/components/RoutingMatrix.js": {
    "flatFile": "RoutingMatrix.js",
    "mainExport": {
      "type": "class",
      "name": "RoutingMatrix"
    },
    "methods": [
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "renderChannelsList",
        "static": false,
        "async": false
      },
      {
        "name": "renderInstrumentOptions",
        "static": false,
        "async": false
      },
      {
        "name": "renderChannelStats",
        "static": false,
        "async": false
      },
      {
        "name": "renderRouteStatus",
        "static": false,
        "async": false
      },
      {
        "name": "attachListeners",
        "static": false,
        "async": false
      },
      {
        "name": "handleRouteChange",
        "static": false,
        "async": false
      },
      {
        "name": "handleTestRoute",
        "static": false,
        "async": false
      },
      {
        "name": "handleAutoAssign",
        "static": false,
        "async": false
      },
      {
        "name": "handleClearAll",
        "static": false,
        "async": false
      },
      {
        "name": "getActiveChannels",
        "static": false,
        "async": false
      },
      {
        "name": "getConnectedInstruments",
        "static": false,
        "async": false
      },
      {
        "name": "getRoutes",
        "static": false,
        "async": false
      },
      {
        "name": "setChannels",
        "static": false,
        "async": false
      },
      {
        "name": "setInstruments",
        "static": false,
        "async": false
      },
      {
        "name": "setRoutes",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/scripts/views/components/RoutingMatrixView.js": {
    "flatFile": "RoutingMatrixView.js",
    "mainExport": {
      "type": "class",
      "name": "RoutingMatrixView"
    },
    "methods": [
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "renderModeSelector",
        "static": false,
        "async": false
      },
      {
        "name": "renderActions",
        "static": false,
        "async": false
      },
      {
        "name": "renderStats",
        "static": false,
        "async": false
      },
      {
        "name": "renderMatrix",
        "static": false,
        "async": false
      },
      {
        "name": "renderList",
        "static": false,
        "async": false
      },
      {
        "name": "renderInstrumentOptions",
        "static": false,
        "async": false
      },
      {
        "name": "renderPresets",
        "static": false,
        "async": false
      },
      {
        "name": "renderConflicts",
        "static": false,
        "async": false
      },
      {
        "name": "cacheElements",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "toggleAssignment",
        "static": false,
        "async": false
      },
      {
        "name": "autoRoute",
        "static": false,
        "async": false
      },
      {
        "name": "clearRouting",
        "static": false,
        "async": false
      },
      {
        "name": "savePreset",
        "static": false,
        "async": false
      },
      {
        "name": "getInstrumentIcon",
        "static": false,
        "async": false
      },
      {
        "name": "getCompatibilityClass",
        "static": false,
        "async": false
      },
      {
        "name": "getConflictIcon",
        "static": false,
        "async": false
      },
      {
        "name": "formatNoteRange",
        "static": false,
        "async": false
      },
      {
        "name": "update",
        "static": false,
        "async": false
      },
      {
        "name": "setMode",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/models/RoutingModel.js": {
    "flatFile": "RoutingModel.js",
    "mainExport": {
      "type": "class",
      "name": "RoutingModel"
    },
    "methods": [
      {
        "name": "createDefaultChannels",
        "static": false,
        "async": false
      },
      {
        "name": "getChannel",
        "static": false,
        "async": false
      },
      {
        "name": "getAllChannels",
        "static": false,
        "async": false
      },
      {
        "name": "getActiveChannels",
        "static": false,
        "async": false
      },
      {
        "name": "assignChannelToDevice",
        "static": false,
        "async": false
      },
      {
        "name": "unassignChannel",
        "static": false,
        "async": false
      },
      {
        "name": "muteChannel",
        "static": false,
        "async": false
      },
      {
        "name": "soloChannel",
        "static": false,
        "async": false
      },
      {
        "name": "setChannelVolume",
        "static": false,
        "async": false
      },
      {
        "name": "setChannelPan",
        "static": false,
        "async": false
      },
      {
        "name": "setChannelTranspose",
        "static": false,
        "async": false
      },
      {
        "name": "setGlobalMute",
        "static": false,
        "async": false
      },
      {
        "name": "setGlobalSolo",
        "static": false,
        "async": false
      },
      {
        "name": "setMasterVolume",
        "static": false,
        "async": false
      },
      {
        "name": "resetAll",
        "static": false,
        "async": false
      },
      {
        "name": "getRoutingConfiguration",
        "static": false,
        "async": false
      },
      {
        "name": "updateDevices",
        "static": false,
        "async": false
      },
      {
        "name": "getStats",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/RoutingView.js": {
    "flatFile": "RoutingView.js",
    "mainExport": {
      "type": "class",
      "name": "RoutingView"
    },
    "methods": [
      {
        "name": "logDebug",
        "static": false,
        "async": false
      },
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "renderSimpleRouting",
        "static": false,
        "async": false
      },
      {
        "name": "renderAdvancedRouting",
        "static": false,
        "async": false
      },
      {
        "name": "initRoutingMatrix",
        "static": false,
        "async": false
      },
      {
        "name": "attachEventListeners",
        "static": false,
        "async": false
      },
      {
        "name": "handleRouteChange",
        "static": false,
        "async": false
      },
      {
        "name": "handleTestRoute",
        "static": false,
        "async": false
      },
      {
        "name": "refresh",
        "static": false,
        "async": false
      },
      {
        "name": "exportRouting",
        "static": false,
        "async": false
      },
      {
        "name": "importRouting",
        "static": false,
        "async": false
      },
      {
        "name": "savePreset",
        "static": false,
        "async": false
      },
      {
        "name": "loadPreset",
        "static": false,
        "async": false
      },
      {
        "name": "setChannels",
        "static": false,
        "async": false
      },
      {
        "name": "setInstruments",
        "static": false,
        "async": false
      },
      {
        "name": "setRoutes",
        "static": false,
        "async": false
      },
      {
        "name": "setPresets",
        "static": false,
        "async": false
      },
      {
        "name": "updateStats",
        "static": false,
        "async": false
      },
      {
        "name": "updateStatValue",
        "static": false,
        "async": false
      },
      {
        "name": "updatePresetsDropdown",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "SearchController.js": {
    "flatFile": "SearchController.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/interaction/SelectionManager.js": {
    "flatFile": "SelectionManager.js",
    "mainExport": {
      "type": "class",
      "name": "SelectionManager"
    },
    "methods": [
      {
        "name": "select",
        "static": false,
        "async": false
      },
      {
        "name": "selectMultiple",
        "static": false,
        "async": false
      },
      {
        "name": "deselect",
        "static": false,
        "async": false
      },
      {
        "name": "toggle",
        "static": false,
        "async": false
      },
      {
        "name": "clear",
        "static": false,
        "async": false
      },
      {
        "name": "selectAll",
        "static": false,
        "async": false
      },
      {
        "name": "invertSelection",
        "static": false,
        "async": false
      },
      {
        "name": "selectByChannel",
        "static": false,
        "async": false
      },
      {
        "name": "selectByVelocity",
        "static": false,
        "async": false
      },
      {
        "name": "selectByPitch",
        "static": false,
        "async": false
      },
      {
        "name": "selectByTimeRange",
        "static": false,
        "async": false
      },
      {
        "name": "startRectSelection",
        "static": false,
        "async": false
      },
      {
        "name": "updateRectSelection",
        "static": false,
        "async": false
      },
      {
        "name": "finishRectSelection",
        "static": false,
        "async": false
      },
      {
        "name": "cancelRectSelection",
        "static": false,
        "async": false
      },
      {
        "name": "selectNotesInRect",
        "static": false,
        "async": false
      },
      {
        "name": "rectsIntersect",
        "static": false,
        "async": false
      },
      {
        "name": "findNoteAt",
        "static": false,
        "async": false
      },
      {
        "name": "invalidateCache",
        "static": false,
        "async": false
      },
      {
        "name": "isSelected",
        "static": false,
        "async": false
      },
      {
        "name": "getSelectedIds",
        "static": false,
        "async": false
      },
      {
        "name": "getSelectedNotes",
        "static": false,
        "async": false
      },
      {
        "name": "getCount",
        "static": false,
        "async": false
      },
      {
        "name": "getSelectionBounds",
        "static": false,
        "async": false
      },
      {
        "name": "saveSelectionState",
        "static": false,
        "async": false
      },
      {
        "name": "undoSelection",
        "static": false,
        "async": false
      },
      {
        "name": "redoSelection",
        "static": false,
        "async": false
      },
      {
        "name": "renderSelectionRect",
        "static": false,
        "async": false
      },
      {
        "name": "emitChange",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/models/StateModel.js": {
    "flatFile": "StateModel.js",
    "mainExport": {
      "type": "class",
      "name": "StateModel"
    },
    "methods": [
      {
        "name": "setupValidation",
        "static": false,
        "async": false
      },
      {
        "name": "setupComputedProperties",
        "static": false,
        "async": false
      },
      {
        "name": "setupWatchers",
        "static": false,
        "async": false
      },
      {
        "name": "setCurrentFile",
        "static": false,
        "async": false
      },
      {
        "name": "setCurrentPlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "setCurrentPage",
        "static": false,
        "async": false
      },
      {
        "name": "setPlaybackState",
        "static": false,
        "async": false
      },
      {
        "name": "setSetting",
        "static": false,
        "async": false
      },
      {
        "name": "updateSettings",
        "static": false,
        "async": false
      },
      {
        "name": "incrementStat",
        "static": false,
        "async": false
      },
      {
        "name": "resetSessionStats",
        "static": false,
        "async": false
      },
      {
        "name": "getPlaybackState",
        "static": false,
        "async": false
      },
      {
        "name": "getSessionInfo",
        "static": false,
        "async": false
      },
      {
        "name": "getUIState",
        "static": false,
        "async": false
      },
      {
        "name": "getPerformanceMetrics",
        "static": false,
        "async": false
      },
      {
        "name": "exportState",
        "static": false,
        "async": false
      },
      {
        "name": "importState",
        "static": false,
        "async": false
      },
      {
        "name": "addToRecentFiles",
        "static": false,
        "async": false
      },
      {
        "name": "addToRecentPlaylists",
        "static": false,
        "async": false
      },
      {
        "name": "updatePlaybackCapabilities",
        "static": false,
        "async": false
      },
      {
        "name": "handleSettingsChange",
        "static": false,
        "async": false
      },
      {
        "name": "loadPersistedState",
        "static": false,
        "async": false
      },
      {
        "name": "persistState",
        "static": false,
        "async": false
      },
      {
        "name": "estimateMemoryUsage",
        "static": false,
        "async": false
      },
      {
        "name": "calculateRenderingLoad",
        "static": false,
        "async": false
      },
      {
        "name": "calculateMidiLoad",
        "static": false,
        "async": false
      },
      {
        "name": "generatePerformanceRecommendations",
        "static": false,
        "async": false
      },
      {
        "name": "formatTime",
        "static": false,
        "async": false
      },
      {
        "name": "formatDuration",
        "static": false,
        "async": false
      },
      {
        "name": "persist",
        "static": false,
        "async": true
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/scripts/services/StorageService.js": {
    "flatFile": "StorageService.js",
    "mainExport": {
      "type": "class",
      "name": "StorageService"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "bindEvents",
        "static": false,
        "async": false
      },
      {
        "name": "save",
        "static": false,
        "async": false
      },
      {
        "name": "load",
        "static": false,
        "async": false
      },
      {
        "name": "remove",
        "static": false,
        "async": false
      },
      {
        "name": "exists",
        "static": false,
        "async": false
      },
      {
        "name": "saveState",
        "static": false,
        "async": false
      },
      {
        "name": "loadState",
        "static": false,
        "async": false
      },
      {
        "name": "savePreferences",
        "static": false,
        "async": false
      },
      {
        "name": "loadPreferences",
        "static": false,
        "async": false
      },
      {
        "name": "savePlaylist",
        "static": false,
        "async": false
      },
      {
        "name": "loadPlaylists",
        "static": false,
        "async": false
      },
      {
        "name": "saveRouting",
        "static": false,
        "async": false
      },
      {
        "name": "loadRouting",
        "static": false,
        "async": false
      },
      {
        "name": "saveRecentFiles",
        "static": false,
        "async": false
      },
      {
        "name": "loadRecentFiles",
        "static": false,
        "async": false
      },
      {
        "name": "startAutoSave",
        "static": false,
        "async": false
      },
      {
        "name": "stopAutoSave",
        "static": false,
        "async": false
      },
      {
        "name": "autoSave",
        "static": false,
        "async": false
      },
      {
        "name": "saveAll",
        "static": false,
        "async": false
      },
      {
        "name": "compress",
        "static": false,
        "async": false
      },
      {
        "name": "decompress",
        "static": false,
        "async": false
      },
      {
        "name": "calculateStorageUsage",
        "static": false,
        "async": false
      },
      {
        "name": "getAvailableSpace",
        "static": false,
        "async": false
      },
      {
        "name": "cleanupOldData",
        "static": false,
        "async": false
      },
      {
        "name": "migrateData",
        "static": false,
        "async": false
      },
      {
        "name": "isStorageAvailable",
        "static": false,
        "async": false
      },
      {
        "name": "clearAll",
        "static": false,
        "async": false
      },
      {
        "name": "exportAll",
        "static": false,
        "async": false
      },
      {
        "name": "importAll",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/SystemController.js": {
    "flatFile": "SystemController.js",
    "mainExport": {
      "type": "class",
      "name": "SystemController"
    },
    "methods": [
      {
        "name": "bindEvents",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      },
      {
        "name": "initializeSystemConfig",
        "static": false,
        "async": false
      },
      {
        "name": "loadConfig",
        "static": false,
        "async": false
      },
      {
        "name": "saveConfig",
        "static": false,
        "async": false
      },
      {
        "name": "refreshSystemView",
        "static": false,
        "async": false
      },
      {
        "name": "getBackendData",
        "static": false,
        "async": false
      },
      {
        "name": "startConnectionMonitor",
        "static": false,
        "async": false
      },
      {
        "name": "stopConnectionMonitor",
        "static": false,
        "async": false
      },
      {
        "name": "reconnectBackend",
        "static": false,
        "async": true
      },
      {
        "name": "refreshSystemStatus",
        "static": false,
        "async": true
      },
      {
        "name": "updateSystemStats",
        "static": false,
        "async": true
      },
      {
        "name": "startStatsMonitoring",
        "static": false,
        "async": false
      },
      {
        "name": "stopStatsMonitoring",
        "static": false,
        "async": false
      },
      {
        "name": "updateInstrumentLatencies",
        "static": false,
        "async": false
      },
      {
        "name": "onSystemPageActive",
        "static": false,
        "async": false
      },
      {
        "name": "onSystemPageInactive",
        "static": false,
        "async": false
      },
      {
        "name": "updateFPSStats",
        "static": false,
        "async": false
      },
      {
        "name": "logDebug",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/models/SystemModel.js": {
    "flatFile": "SystemModel.js",
    "mainExport": {
      "type": "class",
      "name": "SystemModel"
    },
    "methods": [
      {
        "name": "startMonitoring",
        "static": false,
        "async": false
      },
      {
        "name": "stopMonitoring",
        "static": false,
        "async": false
      },
      {
        "name": "refreshSystemInfo",
        "static": false,
        "async": true
      },
      {
        "name": "updateAudioConfig",
        "static": false,
        "async": true
      },
      {
        "name": "updateMidiConfig",
        "static": false,
        "async": true
      },
      {
        "name": "restart",
        "static": false,
        "async": true
      },
      {
        "name": "shutdown",
        "static": false,
        "async": true
      },
      {
        "name": "getSystemInfo",
        "static": false,
        "async": false
      },
      {
        "name": "getAudioConfig",
        "static": false,
        "async": false
      },
      {
        "name": "getMidiConfig",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "SystemView.js": {
    "flatFile": "SystemView.js",
    "mainExport": {
      "type": "class",
      "name": "SystemView"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "buildTemplate",
        "static": false,
        "async": false
      },
      {
        "name": "buildAudioMidiConfig",
        "static": false,
        "async": false
      },
      {
        "name": "buildInstrumentLatencyList",
        "static": false,
        "async": false
      },
      {
        "name": "buildVisualizerConfig",
        "static": false,
        "async": false
      },
      {
        "name": "buildInterfaceConfig",
        "static": false,
        "async": false
      },
      {
        "name": "buildSystemStats",
        "static": false,
        "async": false
      },
      {
        "name": "buildAdvancedConfig",
        "static": false,
        "async": false
      },
      {
        "name": "formatUptime",
        "static": false,
        "async": false
      },
      {
        "name": "startStatsUpdate",
        "static": false,
        "async": false
      },
      {
        "name": "stopStatsUpdate",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      },
      {
        "name": "if",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/renderers/TimelineRenderer.js": {
    "flatFile": "TimelineRenderer.js",
    "mainExport": {
      "type": "class",
      "name": "TimelineRenderer"
    },
    "methods": [
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "renderStaticMarkers",
        "static": false,
        "async": false
      },
      {
        "name": "renderPlayhead",
        "static": false,
        "async": false
      },
      {
        "name": "setPlayheadPosition",
        "static": false,
        "async": false
      },
      {
        "name": "addMarker",
        "static": false,
        "async": false
      },
      {
        "name": "removeMarker",
        "static": false,
        "async": false
      },
      {
        "name": "clearMarkers",
        "static": false,
        "async": false
      },
      {
        "name": "renderMarkers",
        "static": false,
        "async": false
      },
      {
        "name": "formatTime",
        "static": false,
        "async": false
      },
      {
        "name": "formatTimeSMPTE",
        "static": false,
        "async": false
      },
      {
        "name": "getTimeAtPosition",
        "static": false,
        "async": false
      },
      {
        "name": "getMarkerAtPosition",
        "static": false,
        "async": false
      },
      {
        "name": "setHeight",
        "static": false,
        "async": false
      },
      {
        "name": "setColors",
        "static": false,
        "async": false
      },
      {
        "name": "getHeight",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/scripts/views/components/ToggleSwitch.js": {
    "flatFile": "ToggleSwitch.js",
    "mainExport": {
      "type": "class",
      "name": "ToggleSwitch"
    },
    "methods": [
      {
        "name": "createGroup",
        "static": true,
        "async": false
      },
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "buildTemplate",
        "static": false,
        "async": false
      },
      {
        "name": "buildLabel",
        "static": false,
        "async": false
      },
      {
        "name": "buildStatusLabels",
        "static": false,
        "async": false
      },
      {
        "name": "applyStyles",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "toggle",
        "static": false,
        "async": false
      },
      {
        "name": "check",
        "static": false,
        "async": false
      },
      {
        "name": "uncheck",
        "static": false,
        "async": false
      },
      {
        "name": "setDisabled",
        "static": false,
        "async": false
      },
      {
        "name": "setChecked",
        "static": false,
        "async": false
      },
      {
        "name": "updateState",
        "static": false,
        "async": false
      },
      {
        "name": "animateToggle",
        "static": false,
        "async": false
      },
      {
        "name": "triggerChange",
        "static": false,
        "async": false
      },
      {
        "name": "getValue",
        "static": false,
        "async": false
      },
      {
        "name": "setValue",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/ValidationController.js": {
    "flatFile": "ValidationController.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/utils/Validator.js": {
    "flatFile": "Validator.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/js/editor/core/Viewport.js": {
    "flatFile": "Viewport.js",
    "mainExport": {
      "type": "class",
      "name": "Viewport"
    },
    "methods": [
      {
        "name": "resize",
        "static": false,
        "async": false
      },
      {
        "name": "getSize",
        "static": false,
        "async": false
      },
      {
        "name": "getVisibleRect",
        "static": false,
        "async": false
      },
      {
        "name": "isPointVisible",
        "static": false,
        "async": false
      },
      {
        "name": "isRectVisible",
        "static": false,
        "async": false
      },
      {
        "name": "scrollX",
        "static": false,
        "async": false
      },
      {
        "name": "scrollY",
        "static": false,
        "async": false
      },
      {
        "name": "scrollToTime",
        "static": false,
        "async": false
      },
      {
        "name": "scrollToNote",
        "static": false,
        "async": false
      },
      {
        "name": "animateScroll",
        "static": false,
        "async": false
      },
      {
        "name": "setAutoScroll",
        "static": false,
        "async": false
      },
      {
        "name": "followPlayhead",
        "static": false,
        "async": false
      },
      {
        "name": "zoomAt",
        "static": false,
        "async": false
      },
      {
        "name": "zoomIn",
        "static": false,
        "async": false
      },
      {
        "name": "zoomOut",
        "static": false,
        "async": false
      },
      {
        "name": "zoomHorizontal",
        "static": false,
        "async": false
      },
      {
        "name": "zoomVertical",
        "static": false,
        "async": false
      },
      {
        "name": "resetZoom",
        "static": false,
        "async": false
      },
      {
        "name": "fitToNotes",
        "static": false,
        "async": false
      },
      {
        "name": "focusRegion",
        "static": false,
        "async": false
      },
      {
        "name": "screenToWorld",
        "static": false,
        "async": false
      },
      {
        "name": "worldToScreen",
        "static": false,
        "async": false
      },
      {
        "name": "easeInOutCubic",
        "static": false,
        "async": false
      },
      {
        "name": "emitChange",
        "static": false,
        "async": false
      },
      {
        "name": "serialize",
        "static": false,
        "async": false
      },
      {
        "name": "deserialize",
        "static": false,
        "async": false
      },
      {
        "name": "destroy",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/controllers/VisualizerController.js": {
    "flatFile": "VisualizerController.js",
    "mainExport": {
      "type": "class",
      "name": "VisualizerController"
    },
    "methods": [
      {
        "name": "init",
        "static": false,
        "async": false
      },
      {
        "name": "attachEvents",
        "static": false,
        "async": false
      },
      {
        "name": "startUpdates",
        "static": false,
        "async": false
      },
      {
        "name": "stopUpdates",
        "static": false,
        "async": false
      },
      {
        "name": "handleMidiEvent",
        "static": false,
        "async": false
      },
      {
        "name": "adjustQuality",
        "static": false,
        "async": false
      },
      {
        "name": "setPreviewTime",
        "static": false,
        "async": false
      },
      {
        "name": "toggleChannel",
        "static": false,
        "async": false
      },
      {
        "name": "setShowVelocity",
        "static": false,
        "async": false
      },
      {
        "name": "setShowCC",
        "static": false,
        "async": false
      },
      {
        "name": "setShowNoteNames",
        "static": false,
        "async": false
      },
      {
        "name": "getSnapshot",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/views/VisualizerView.js": {
    "flatFile": "VisualizerView.js",
    "mainExport": {
      "type": "class",
      "name": "VisualizerView"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "bindCustomEvents",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "buildTemplate",
        "static": false,
        "async": false
      },
      {
        "name": "initCanvas",
        "static": false,
        "async": false
      },
      {
        "name": "resize",
        "static": false,
        "async": false
      },
      {
        "name": "loadMidiJson",
        "static": false,
        "async": false
      },
      {
        "name": "update",
        "static": false,
        "async": false
      },
      {
        "name": "updateUpcomingNotes",
        "static": false,
        "async": false
      },
      {
        "name": "updateActiveNotes",
        "static": false,
        "async": false
      },
      {
        "name": "updateCCValues",
        "static": false,
        "async": false
      },
      {
        "name": "addActiveNote",
        "static": false,
        "async": false
      },
      {
        "name": "removeActiveNote",
        "static": false,
        "async": false
      },
      {
        "name": "clearActiveNotes",
        "static": false,
        "async": false
      },
      {
        "name": "invalidate",
        "static": false,
        "async": false
      },
      {
        "name": "startRenderLoop",
        "static": false,
        "async": false
      },
      {
        "name": "stopRenderLoop",
        "static": false,
        "async": false
      },
      {
        "name": "renderCanvas",
        "static": false,
        "async": false
      },
      {
        "name": "drawEmptyState",
        "static": false,
        "async": false
      },
      {
        "name": "drawPlayhead",
        "static": false,
        "async": false
      },
      {
        "name": "drawChannelLanes",
        "static": false,
        "async": false
      },
      {
        "name": "drawUpcomingNotes",
        "static": false,
        "async": false
      },
      {
        "name": "drawActiveNotes",
        "static": false,
        "async": false
      },
      {
        "name": "drawCCOverlay",
        "static": false,
        "async": false
      },
      {
        "name": "getActiveChannels",
        "static": false,
        "async": false
      },
      {
        "name": "toggleChannel",
        "static": false,
        "async": false
      },
      {
        "name": "setPreviewTime",
        "static": false,
        "async": false
      },
      {
        "name": "setShowVelocity",
        "static": false,
        "async": false
      },
      {
        "name": "setShowCC",
        "static": false,
        "async": false
      },
      {
        "name": "setShowNoteNames",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  },
  "frontend/js/main.js": {
    "flatFile": "main.js",
    "mainExport": null,
    "methods": [],
    "functions": [],
    "constants": []
  },
  "frontend/scripts/editor/components/RoutingMatrixEditor.js": {
    "flatFile": "routing-matrix-editor.js",
    "mainExport": {
      "type": "class",
      "name": "RoutingMatrixEditor"
    },
    "methods": [
      {
        "name": "initialize",
        "static": false,
        "async": false
      },
      {
        "name": "render",
        "static": false,
        "async": false
      },
      {
        "name": "renderToolbar",
        "static": false,
        "async": false
      },
      {
        "name": "renderQuickStats",
        "static": false,
        "async": false
      },
      {
        "name": "renderMatrix",
        "static": false,
        "async": false
      },
      {
        "name": "renderList",
        "static": false,
        "async": false
      },
      {
        "name": "renderGraph",
        "static": false,
        "async": false
      },
      {
        "name": "renderGraphSVG",
        "static": false,
        "async": false
      },
      {
        "name": "renderQuickActions",
        "static": false,
        "async": false
      },
      {
        "name": "toggleCell",
        "static": false,
        "async": false
      },
      {
        "name": "selectChannel",
        "static": false,
        "async": false
      },
      {
        "name": "selectInstrument",
        "static": false,
        "async": false
      },
      {
        "name": "createRouteFromSelection",
        "static": false,
        "async": false
      },
      {
        "name": "mergeSelected",
        "static": false,
        "async": false
      },
      {
        "name": "splitSelected",
        "static": false,
        "async": false
      },
      {
        "name": "clearSelection",
        "static": false,
        "async": false
      },
      {
        "name": "showTooltip",
        "static": false,
        "async": false
      },
      {
        "name": "hideTooltip",
        "static": false,
        "async": false
      },
      {
        "name": "setViewMode",
        "static": false,
        "async": false
      },
      {
        "name": "toggleCompatibility",
        "static": false,
        "async": false
      },
      {
        "name": "toggleMultiSelect",
        "static": false,
        "async": false
      },
      {
        "name": "autoRoute",
        "static": false,
        "async": false
      },
      {
        "name": "clearAll",
        "static": false,
        "async": false
      },
      {
        "name": "assignFromSelect",
        "static": false,
        "async": false
      },
      {
        "name": "removeRoute",
        "static": false,
        "async": false
      },
      {
        "name": "addDestination",
        "static": false,
        "async": false
      },
      {
        "name": "showRouteDetails",
        "static": false,
        "async": false
      },
      {
        "name": "getInstrumentIcon",
        "static": false,
        "async": false
      },
      {
        "name": "getCompatClass",
        "static": false,
        "async": false
      },
      {
        "name": "updateStats",
        "static": false,
        "async": false
      }
    ],
    "functions": [],
    "constants": []
  }
}